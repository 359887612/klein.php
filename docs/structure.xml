<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="Klein">
  <file path="App.php" hash="b27a1b009dac9e05073914bc995fbc3b" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein" line="24" package="Klein">
      <extends/>
      <name>App</name>
      <full_name>\Klein\App</full_name>
      <docblock line="19">
        <description>App</description>
        <long-description></long-description>
        <tag line="19" name="package" description="Klein"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="37" namespace="Klein" package="Default">
        <name>$services</name>
        <default>array()</default>
        <docblock line="31">
          <description>The array of app services</description>
          <long-description></long-description>
          <tag line="31" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="31" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="53" package="Klein">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="39">
          <description>Magic "__get" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily request a service from this instance
while treating it as an instance property&lt;/p&gt;

&lt;p&gt;This checks the lazy service register and automatically calls the registered
service method&lt;/p&gt;</long-description>
          <tag line="39" name="param" description="The name of the service" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="throws" description="If a non-registered service is attempted to fetched" type="\Klein\Exceptions\UnknownServiceException">
            <type by_reference="false">\Klein\Exceptions\UnknownServiceException</type>
          </tag>
          <tag line="39" name="access" description="public"/>
          <tag line="39" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="75" package="Klein">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="63">
          <description>Magic "__call" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily call a property as a callable method
Allow callbacks to be assigned as properties and called like normal methods&lt;/p&gt;</long-description>
          <tag line="63" name="param" description="The callable method to execute" type="callable" variable="$method">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="63" name="param" description="The argument array to pass to our callback" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="63" name="throws" description="If a non-registered method is attempted to be called" type="\BadMethodCallException">
            <type by_reference="false">\BadMethodCallException</type>
          </tag>
          <tag line="63" name="access" description="public"/>
          <tag line="63" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="93" package="Klein">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="84">
          <description>Register a lazy service</description>
          <long-description></long-description>
          <tag line="84" name="param" description="The name of the service" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="param" description="The callable function to execute when requesting our service" type="callable" variable="$closure">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="84" name="throws" description="If an attempt is made to register two services with the same name" type="\Klein\Exceptions\DuplicateServiceException">
            <type by_reference="false">\Klein\Exceptions\DuplicateServiceException</type>
          </tag>
          <tag line="84" name="access" description="public"/>
          <tag line="84" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="93">
          <name>$closure</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="DataCollection/DataCollection.php" hash="90a59c190ff3718ad5d73dc1c05fb8f1" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\DataCollection" line="33" package="Klein\DataCollection">
      <extends/>
      <implements>\IteratorAggregate</implements>
      <implements>\ArrayAccess</implements>
      <implements>\Countable</implements>
      <name>DataCollection</name>
      <full_name>\Klein\DataCollection\DataCollection</full_name>
      <docblock line="19">
        <description>DataCollection</description>
        <long-description>&lt;p&gt;A generic collection class to contain array-like data, specifically
designed to work with HTTP data (request params, session data, etc)&lt;/p&gt;

&lt;p&gt;Inspired by @fabpot's Symfony 2's HttpFoundation&lt;/p&gt;</long-description>
        <tag line="19" name="link" description="https://github.com/symfony/HttpFoundation/blob/master/ParameterBag.php" link="https://github.com/symfony/HttpFoundation/blob/master/ParameterBag.php"/>
        <tag line="19" name="uses" description="\IteratorAggregate" refers="\IteratorAggregate"/>
        <tag line="19" name="uses" description="\ArrayAccess" refers="\ArrayAccess"/>
        <tag line="19" name="uses" description="\Countable" refers="\Countable"/>
        <tag line="19" name="package" description="Klein\DataCollection"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="46" namespace="Klein\DataCollection" package="Default">
        <name>$attributes</name>
        <default>array()</default>
        <docblock line="40">
          <description>Collection of data attributes</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="59" package="Klein\DataCollection">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="53">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="53" name="param" description="The data attributes of this collection" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="53" name="access" description="public"/>
        </docblock>
        <argument line="59">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="76" package="Klein\DataCollection">
        <name>all</name>
        <full_name>all</full_name>
        <docblock line="64">
          <description>Returns all of the attributes in the collection</description>
          <long-description>&lt;p&gt;If an optional mask array is passed, this only
returns the keys that match the mask&lt;/p&gt;</long-description>
          <tag line="64" name="param" description="The parameter mask array" type="array" variable="$mask">
            <type by_reference="false">array</type>
          </tag>
          <tag line="64" name="param" description="Whether or not to fill the returned array&#10; with null values to match the given mask" type="boolean" variable="$fill_with_nulls">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="64" name="access" description="public"/>
          <tag line="64" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$mask</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="76">
          <name>$fill_with_nulls</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="117" package="Klein\DataCollection">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="107">
          <description>Return an attribute of the collection</description>
          <long-description>&lt;p&gt;Return a default value if the key doesn't exist&lt;/p&gt;</long-description>
          <tag line="107" name="param" description="The name of the parameter to return" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="param" description="The default value of the parameter if it contains no value" type="mixed" variable="$default_val">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="107" name="access" description="public"/>
          <tag line="107" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="117">
          <name>$default_val</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="134" package="Klein\DataCollection">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="126">
          <description>Set an attribute of the collection</description>
          <long-description></long-description>
          <tag line="126" name="param" description="The name of the parameter to set" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="The value of the parameter to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="126" name="access" description="public"/>
          <tag line="126" name="return" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="134">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="148" package="Klein\DataCollection">
        <name>replace</name>
        <full_name>replace</full_name>
        <docblock line="141">
          <description>Replace the collection's attributes</description>
          <long-description></long-description>
          <tag line="141" name="param" description="The attributes to replace the collection's with" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="141" name="access" description="public"/>
          <tag line="141" name="return" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="167" package="Klein\DataCollection">
        <name>merge</name>
        <full_name>merge</full_name>
        <docblock line="155">
          <description>Merge attributes with the collection's attributes</description>
          <long-description>&lt;p&gt;Optionally allows a second boolean parameter to merge the attributes
into the collection in a "hard" manner, using the "array_replace"
method instead of the usual "array_merge" method&lt;/p&gt;</long-description>
          <tag line="155" name="param" description="The attributes to merge into the collection" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="155" name="param" description="Whether or not to make the merge &quot;hard&quot;" type="boolean" variable="$hard">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="155" name="access" description="public"/>
          <tag line="155" name="return" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="167">
          <name>$hard</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="195" package="Klein\DataCollection">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="188">
          <description>See if an attribute exists in the collection</description>
          <long-description></long-description>
          <tag line="188" name="param" description="The name of the parameter" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="188" name="access" description="public"/>
          <tag line="188" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="208" package="Klein\DataCollection">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="201">
          <description>Remove an attribute from the collection</description>
          <long-description></long-description>
          <tag line="201" name="param" description="The name of the parameter" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="access" description="public"/>
          <tag line="201" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="229" package="Klein\DataCollection">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="218">
          <description>Magic "__get" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily request an attribute from
this instance while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="218" name="see" description="\Klein\DataCollection\get()" refers="\Klein\DataCollection\get()"/>
          <tag line="218" name="param" description="The name of the parameter to return" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="218" name="access" description="public"/>
          <tag line="218" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="246" package="Klein\DataCollection">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="234">
          <description>Magic "__set" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily set an attribute from
this instance while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="234" name="see" description="\Klein\DataCollection\set()" refers="\Klein\DataCollection\set()"/>
          <tag line="234" name="param" description="The name of the parameter to set" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="234" name="param" description="The value of the parameter to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="234" name="access" description="public"/>
          <tag line="234" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="246">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="246">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="262" package="Klein\DataCollection">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="251">
          <description>Magic "__isset" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily check the existence of an attribute
from this instance while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="251" name="see" description="\Klein\DataCollection\exists()" refers="\Klein\DataCollection\exists()"/>
          <tag line="251" name="param" description="The name of the parameter" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="251" name="access" description="public"/>
          <tag line="251" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="262">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="278" package="Klein\DataCollection">
        <name>__unset</name>
        <full_name>__unset</full_name>
        <docblock line="267">
          <description>Magic "__unset" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily remove an attribute from
this instance while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="267" name="see" description="\Klein\DataCollection\remove()" refers="\Klein\DataCollection\remove()"/>
          <tag line="267" name="param" description="The name of the parameter" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="267" name="access" description="public"/>
          <tag line="267" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="297" package="Klein\DataCollection">
        <name>getIterator</name>
        <full_name>getIterator</full_name>
        <docblock line="288">
          <description>Get the aggregate iterator</description>
          <long-description>&lt;p&gt;IteratorAggregate interface required method&lt;/p&gt;</long-description>
          <tag line="288" name="see" description="\IteratorAggregate::getIterator()" refers="\IteratorAggregate::getIterator()"/>
          <tag line="288" name="access" description="public"/>
          <tag line="288" name="return" description="" type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="313" package="Klein\DataCollection">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="302">
          <description>Get an attribute via array syntax</description>
          <long-description>&lt;p&gt;Allows the access of attributes of this instance while treating it like an array&lt;/p&gt;</long-description>
          <tag line="302" name="see" description="\ArrayAccess::offsetGet()" refers="\ArrayAccess::offsetGet()"/>
          <tag line="302" name="see" description="\Klein\DataCollection\get()" refers="\Klein\DataCollection\get()"/>
          <tag line="302" name="param" description="The name of the parameter to return" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="302" name="access" description="public"/>
          <tag line="302" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="313">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="330" package="Klein\DataCollection">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="318">
          <description>Set an attribute via array syntax</description>
          <long-description>&lt;p&gt;Allows the access of attributes of this instance while treating it like an array&lt;/p&gt;</long-description>
          <tag line="318" name="see" description="\ArrayAccess::offsetSet()" refers="\ArrayAccess::offsetSet()"/>
          <tag line="318" name="see" description="\Klein\DataCollection\set()" refers="\Klein\DataCollection\set()"/>
          <tag line="318" name="param" description="The name of the parameter to set" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="318" name="param" description="The value of the parameter to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="318" name="access" description="public"/>
          <tag line="318" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="330">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="330">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="346" package="Klein\DataCollection">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="335">
          <description>Check existence an attribute via array syntax</description>
          <long-description>&lt;p&gt;Allows the access of attributes of this instance while treating it like an array&lt;/p&gt;</long-description>
          <tag line="335" name="see" description="\ArrayAccess::offsetExists()" refers="\ArrayAccess::offsetExists()"/>
          <tag line="335" name="see" description="\Klein\DataCollection\exists()" refers="\Klein\DataCollection\exists()"/>
          <tag line="335" name="param" description="The name of the parameter" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="335" name="access" description="public"/>
          <tag line="335" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="346">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="362" package="Klein\DataCollection">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="351">
          <description>Remove an attribute via array syntax</description>
          <long-description>&lt;p&gt;Allows the access of attributes of this instance while treating it like an array&lt;/p&gt;</long-description>
          <tag line="351" name="see" description="\ArrayAccess::offsetUnset()" refers="\ArrayAccess::offsetUnset()"/>
          <tag line="351" name="see" description="\Klein\DataCollection\remove()" refers="\Klein\DataCollection\remove()"/>
          <tag line="351" name="param" description="The name of the parameter" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="351" name="access" description="public"/>
          <tag line="351" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="362">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="377" package="Klein\DataCollection">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="367">
          <description>Count the attributes via a simple "count" call</description>
          <long-description>&lt;p&gt;Allows the use of the "count" function (or any internal counters)
to simply count the number of attributes in the collection.&lt;/p&gt;</long-description>
          <tag line="367" name="see" description="\Countable::count()" refers="\Countable::count()"/>
          <tag line="367" name="access" description="public"/>
          <tag line="367" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="DataCollection/HeaderDataCollection.php" hash="9982fd802fe1428ffe8a1cef1d53346c" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\DataCollection" line="22" package="Klein\DataCollection">
      <extends>\Klein\DataCollection\DataCollection</extends>
      <name>HeaderDataCollection</name>
      <full_name>\Klein\DataCollection\HeaderDataCollection</full_name>
      <docblock line="14">
        <description>HeaderDataCollection</description>
        <long-description>&lt;p&gt;A DataCollection for HTTP headers&lt;/p&gt;</long-description>
        <tag line="14" name="uses" description="\Klein\DataCollection\DataCollection" refers="\Klein\DataCollection\DataCollection"/>
        <tag line="14" name="package" description="Klein\DataCollection"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="36" package="Klein\DataCollection">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="29" name="override" description="(doesn't call our parent)"/>
          <tag line="29" name="param" description="The headers of this collection" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="29" name="access" description="public"/>
        </docblock>
        <argument line="36">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="54" package="Klein\DataCollection">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="43">
          <description>Get a header</description>
          <long-description>&lt;p&gt;{@inheritdoc}&lt;/p&gt;</long-description>
          <tag line="43" name="see" description="\Klein\DataCollection\DataCollection::get()" refers="\Klein\DataCollection\DataCollection::get()"/>
          <tag line="43" name="param" description="The name of the header to return" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="The default value of the header if it contains no value" type="mixed" variable="$default_val">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="43" name="access" description="public"/>
          <tag line="43" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$default_val</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="72" package="Klein\DataCollection">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="61">
          <description>Set a header</description>
          <long-description>&lt;p&gt;{@inheritdoc}&lt;/p&gt;</long-description>
          <tag line="61" name="see" description="\Klein\DataCollection\DataCollection::set()" refers="\Klein\DataCollection\DataCollection::set()"/>
          <tag line="61" name="param" description="The name of the header to set" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="The value of the header to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="61" name="access" description="public"/>
          <tag line="61" name="return" description="" type="\Klein\DataCollection\HeaderDataCollection">
            <type by_reference="false">\Klein\DataCollection\HeaderDataCollection</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="89" package="Klein\DataCollection">
        <name>exists</name>
        <full_name>exists</full_name>
        <docblock line="79">
          <description>Check if a header exists</description>
          <long-description>&lt;p&gt;{@inheritdoc}&lt;/p&gt;</long-description>
          <tag line="79" name="see" description="\Klein\DataCollection\DataCollection::exists()" refers="\Klein\DataCollection\DataCollection::exists()"/>
          <tag line="79" name="param" description="The name of the header" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="access" description="public"/>
          <tag line="79" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="106" package="Klein\DataCollection">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="96">
          <description>Remove a header</description>
          <long-description>&lt;p&gt;{@inheritdoc}&lt;/p&gt;</long-description>
          <tag line="96" name="see" description="\Klein\DataCollection\DataCollection::remove()" refers="\Klein\DataCollection\DataCollection::remove()"/>
          <tag line="96" name="param" description="The name of the header" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="access" description="public"/>
          <tag line="96" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Klein\DataCollection" line="126" package="Klein\DataCollection">
        <name>normalizeName</name>
        <full_name>normalizeName</full_name>
        <docblock line="113">
          <description>Normalize a header name by formatting it in a standard way</description>
          <long-description>&lt;p&gt;This is useful since PHP automatically capitalizes and underscore
separates the words of headers&lt;/p&gt;</long-description>
          <tag line="113" name="link" description="http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2" link="http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2"/>
          <tag line="113" name="param" description="The name (&quot;field&quot;) of the header" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="113" name="param" description="Whether or not to lowercase the name" type="boolean" variable="$make_lowercase">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="113" name="static" description=""/>
          <tag line="113" name="access" description="public"/>
          <tag line="113" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="126">
          <name>$make_lowercase</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="DataCollection/ResponseCookieDataCollection.php" hash="a632656f0ae4546aca015489ddeef2a6" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\DataCollection" line="24" package="Klein\DataCollection">
      <extends>\Klein\DataCollection\DataCollection</extends>
      <name>ResponseCookieDataCollection</name>
      <full_name>\Klein\DataCollection\ResponseCookieDataCollection</full_name>
      <docblock line="16">
        <description>ResponseCookieDataCollection</description>
        <long-description>&lt;p&gt;A DataCollection for HTTP response cookies&lt;/p&gt;</long-description>
        <tag line="16" name="uses" description="\Klein\DataCollection\DataCollection" refers="\Klein\DataCollection\DataCollection"/>
        <tag line="16" name="package" description="Klein\DataCollection"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="38" package="Klein\DataCollection">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="31" name="override" description="(doesn't call our parent)"/>
          <tag line="31" name="param" description="The cookies of this collection" type="array" variable="$cookies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="31" name="access" description="public"/>
        </docblock>
        <argument line="38">
          <name>$cookies</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="65" package="Klein\DataCollection">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="45">
          <description>Set a cookie</description>
          <long-description>&lt;p&gt;{@inheritdoc}&lt;/p&gt;

&lt;p&gt;A value may either be a string or a ResponseCookie instance
String values will be converted into a ResponseCookie with
the "name" of the cookie being set from the "key"&lt;/p&gt;

&lt;p&gt;Obviously, the developer is free to organize this collection
however they like, and can be more explicit by passing a more
suggested "$key" as the cookie's "domain" and passing in an
instance of a ResponseCookie as the "$value"&lt;/p&gt;</long-description>
          <tag line="45" name="see" description="\Klein\DataCollection\DataCollection::set()" refers="\Klein\DataCollection\DataCollection::set()"/>
          <tag line="45" name="param" description="The name of the cookie to set" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="param" description="The value of the cookie to set" type="\Klein\ResponseCookie|string" variable="$value">
            <type by_reference="false">\Klein\ResponseCookie</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="access" description="public"/>
          <tag line="45" name="return" description="" type="\Klein\DataCollection\ResponseCookieDataCollection">
            <type by_reference="false">\Klein\DataCollection\ResponseCookieDataCollection</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="DataCollection/RouteCollection.php" hash="63cfd38f559506761f0d539bc37c840a" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\DataCollection" line="24" package="Klein\DataCollection">
      <extends>\Klein\DataCollection\DataCollection</extends>
      <name>RouteCollection</name>
      <full_name>\Klein\DataCollection\RouteCollection</full_name>
      <docblock line="16">
        <description>RouteCollection</description>
        <long-description>&lt;p&gt;A DataCollection for Routes&lt;/p&gt;</long-description>
        <tag line="16" name="uses" description="\Klein\DataCollection\DataCollection" refers="\Klein\DataCollection\DataCollection"/>
        <tag line="16" name="package" description="Klein\DataCollection"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="38" package="Klein\DataCollection">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="31" name="override" description="(doesn't call our parent)"/>
          <tag line="31" name="param" description="The routes of this collection" type="array" variable="$routes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="31" name="access" description="public"/>
        </docblock>
        <argument line="38">
          <name>$routes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="64" package="Klein\DataCollection">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="45">
          <description>Set a route</description>
          <long-description>&lt;p&gt;{@inheritdoc}&lt;/p&gt;

&lt;p&gt;A value may either be a callable or a Route instance
Callable values will be converted into a Route with
the "name" of the route being set from the "key"&lt;/p&gt;

&lt;p&gt;A developer may add a named route to the collection
by passing the name of the route as the "$key" and an
instance of a Route as the "$value"&lt;/p&gt;</long-description>
          <tag line="45" name="see" description="\Klein\DataCollection\DataCollection::set()" refers="\Klein\DataCollection\DataCollection::set()"/>
          <tag line="45" name="param" description="The name of the route to set" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="param" description="The value of the route to set" type="\Klein\Route|callable" variable="$value">
            <type by_reference="false">\Klein\Route</type>
            <type by_reference="false">callable</type>
          </tag>
          <tag line="45" name="access" description="public"/>
          <tag line="45" name="return" description="" type="\Klein\Route">
            <type by_reference="false">\Klein\Route</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="82" package="Klein\DataCollection">
        <name>addRoute</name>
        <full_name>addRoute</full_name>
        <docblock line="73">
          <description>Add a route instance to the collection</description>
          <long-description>&lt;p&gt;This will auto-generate a name&lt;/p&gt;</long-description>
          <tag line="73" name="param" description="" type="\Klein\Route" variable="$route">
            <type by_reference="false">\Klein\Route</type>
          </tag>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="return" description="" type="\Klein\Route">
            <type by_reference="false">\Klein\Route</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$route</name>
          <default></default>
          <type>\Klein\Route</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="105" package="Klein\DataCollection">
        <name>add</name>
        <full_name>add</full_name>
        <docblock line="94">
          <description>Add a route to the collection</description>
          <long-description>&lt;p&gt;This allows a more generic form that
will take a Route instance, string callable
or any other Route class compatible callback&lt;/p&gt;</long-description>
          <tag line="94" name="param" description="" type="mixed" variable="$route">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="94" name="access" description="public"/>
          <tag line="94" name="return" description="" type="\Klein\Route">
            <type by_reference="false">\Klein\Route</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="DataCollection/ServerDataCollection.php" hash="e5ea3699b19f0d728d1dd18313db3d2f" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\DataCollection" line="27" package="Klein\DataCollection">
      <extends>\Klein\DataCollection\DataCollection</extends>
      <name>ServerDataCollection</name>
      <full_name>\Klein\DataCollection\ServerDataCollection</full_name>
      <docblock line="14">
        <description>ServerDataCollection</description>
        <long-description>&lt;p&gt;A DataCollection for "$_SERVER" like data&lt;/p&gt;

&lt;p&gt;Look familiar?&lt;/p&gt;

&lt;p&gt;Inspired by @fabpot's Symfony 2's HttpFoundation&lt;/p&gt;</long-description>
        <tag line="14" name="link" description="https://github.com/symfony/HttpFoundation/blob/master/ServerBag.php" link="https://github.com/symfony/HttpFoundation/blob/master/ServerBag.php"/>
        <tag line="14" name="uses" description="\Klein\DataCollection\DataCollection" refers="\Klein\DataCollection\DataCollection"/>
        <tag line="14" name="package" description="Klein\DataCollection"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="42" namespace="Klein\DataCollection" package="Default">
        <name>$http_header_prefix</name>
        <default>'HTTP_'</default>
        <docblock line="34">
          <description>The prefix of HTTP headers normally
stored in the Server data</description>
          <long-description></long-description>
          <tag line="34" name="static" description=""/>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="52" namespace="Klein\DataCollection" package="Default">
        <name>$http_nonprefixed_headers</name>
        <default>array('CONTENT_LENGTH', 'CONTENT_TYPE', 'CONTENT_MD5')</default>
        <docblock line="44">
          <description>The list of HTTP headers that for some
reason aren't prefixed in PHP.</description>
          <long-description>&lt;p&gt;..&lt;/p&gt;</long-description>
          <tag line="44" name="static" description=""/>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Klein\DataCollection" line="72" package="Klein\DataCollection">
        <name>hasPrefix</name>
        <full_name>hasPrefix</full_name>
        <docblock line="63">
          <description>Quickly check if a string has a passed prefix</description>
          <long-description></long-description>
          <tag line="63" name="param" description="The string to check" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="param" description="The prefix to test" type="string" variable="$prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="static" description=""/>
          <tag line="63" name="access" description="public"/>
          <tag line="63" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$prefix</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\DataCollection" line="90" package="Klein\DataCollection">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="81">
          <description>Get our headers from our server data collection</description>
          <long-description>&lt;p&gt;PHP is weird... it puts all of the HTTP request
headers in the $_SERVER array. This handles that&lt;/p&gt;</long-description>
          <tag line="81" name="access" description="public"/>
          <tag line="81" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Exceptions/DispatchHaltedException.php" hash="eff8bf66d33aa9f12648370ae98e475f" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\Exceptions" line="24" package="Klein\Exceptions">
      <extends>\RuntimeException</extends>
      <implements>\Klein\Exceptions\KleinExceptionInterface</implements>
      <name>DispatchHaltedException</name>
      <full_name>\Klein\Exceptions\DispatchHaltedException</full_name>
      <docblock line="16">
        <description>DispatchHaltedException</description>
        <long-description>&lt;p&gt;Exception used to halt a route callback from executing in a dispatch loop&lt;/p&gt;</long-description>
        <tag line="16" name="uses" description="\RuntimeException" refers="\RuntimeException"/>
        <tag line="16" name="package" description="Klein\Exceptions"/>
      </docblock>
      <constant namespace="Klein\Exceptions" line="36" package="Klein\Exceptions">
        <name>SKIP_THIS</name>
        <full_name>SKIP_THIS</full_name>
        <value>1</value>
        <docblock line="31">
          <description>Skip this current match/callback</description>
          <long-description></long-description>
          <tag line="31" name="const" description="int"/>
        </docblock>
      </constant>
      <constant namespace="Klein\Exceptions" line="43" package="Klein\Exceptions">
        <name>SKIP_NEXT</name>
        <full_name>SKIP_NEXT</full_name>
        <value>2</value>
        <docblock line="38">
          <description>Skip the next match/callback</description>
          <long-description></long-description>
          <tag line="38" name="const" description="int"/>
        </docblock>
      </constant>
      <constant namespace="Klein\Exceptions" line="50" package="Klein\Exceptions">
        <name>SKIP_REMAINING</name>
        <full_name>SKIP_REMAINING</full_name>
        <value>0</value>
        <docblock line="45">
          <description>Skip the rest of the matches</description>
          <long-description></long-description>
          <tag line="45" name="const" description="int"/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="63" namespace="Klein\Exceptions" package="Default">
        <name>$number_of_skips</name>
        <default>1</default>
        <docblock line="57">
          <description>The number of next matches to skip on a "next" skip</description>
          <long-description></long-description>
          <tag line="57" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="57" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\Exceptions" line="75" package="Klein\Exceptions">
        <name>getNumberOfSkips</name>
        <full_name>getNumberOfSkips</full_name>
        <docblock line="70">
          <description>Gets the number of matches to skip on a "next" skip</description>
          <long-description></long-description>
          <tag line="70" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein\Exceptions" line="87" package="Klein\Exceptions">
        <name>setNumberOfSkips</name>
        <full_name>setNumberOfSkips</full_name>
        <docblock line="80">
          <description>Sets the number of matches to skip on a "next" skip</description>
          <long-description></long-description>
          <tag line="80" name="param" description="" type="int" variable="$number_of_skips">
            <type by_reference="false">int</type>
          </tag>
          <tag line="80" name="access" description="public"/>
          <tag line="80" name="return" description="" type="\Klein\Exceptions\DispatchHaltedException">
            <type by_reference="false">\Klein\Exceptions\DispatchHaltedException</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$number_of_skips</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Exceptions/DuplicateServiceException.php" hash="84146565d317145b3f39f04ec95aaa92" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\Exceptions" line="24" package="Klein\Exceptions">
      <extends>\OverflowException</extends>
      <implements>\Klein\Exceptions\KleinExceptionInterface</implements>
      <name>DuplicateServiceException</name>
      <full_name>\Klein\Exceptions\DuplicateServiceException</full_name>
      <docblock line="16">
        <description>DuplicateServiceException</description>
        <long-description>&lt;p&gt;Exception used for when a service is attempted to be registered that already exists&lt;/p&gt;</long-description>
        <tag line="16" name="uses" description="\Klein\Exceptions\Exception" refers="\Klein\Exceptions\Exception"/>
        <tag line="16" name="package" description="Klein\Exceptions"/>
      </docblock>
    </class>
  </file>
  <file path="Exceptions/KleinExceptionInterface.php" hash="7b23e9b695051bf22e1ca0d8b4c36152" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <interface namespace="Klein\Exceptions" line="26" package="Klein\Exceptions">
      <name>KleinExceptionInterface</name>
      <full_name>\Klein\Exceptions\KleinExceptionInterface</full_name>
      <docblock line="14">
        <description>KleinExceptionInterface</description>
        <long-description>&lt;p&gt;Exception interface that Klein's exceptions should implement&lt;/p&gt;

&lt;p&gt;This is mostly for having a simple, common Interface class/namespace
that can be type-hinted/instance-checked against, therefore making it
easier to handle Klein exceptions while still allowing the different
exception classes to properly extend the corresponding SPL Exception type&lt;/p&gt;</long-description>
        <tag line="14" name="package" description="Klein\Exceptions"/>
      </docblock>
    </interface>
  </file>
  <file path="Exceptions/LockedResponseException.php" hash="9584b5097cdf170e72dd417dbcc1b682" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\Exceptions" line="24" package="Klein\Exceptions">
      <extends>\RuntimeException</extends>
      <implements>\Klein\Exceptions\KleinExceptionInterface</implements>
      <name>LockedResponseException</name>
      <full_name>\Klein\Exceptions\LockedResponseException</full_name>
      <docblock line="16">
        <description>LockedResponseException</description>
        <long-description>&lt;p&gt;Exception used for when a response is attempted to be modified while its locked&lt;/p&gt;</long-description>
        <tag line="16" name="uses" description="\RuntimeException" refers="\RuntimeException"/>
        <tag line="16" name="package" description="Klein\Exceptions"/>
      </docblock>
    </class>
  </file>
  <file path="Exceptions/ResponseAlreadySentException.php" hash="9b0e43125b17f9295052408d471ebcb5" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\Exceptions" line="24" package="Klein\Exceptions">
      <extends>\RuntimeException</extends>
      <implements>\Klein\Exceptions\KleinExceptionInterface</implements>
      <name>ResponseAlreadySentException</name>
      <full_name>\Klein\Exceptions\ResponseAlreadySentException</full_name>
      <docblock line="16">
        <description>ResponseAlreadySentException</description>
        <long-description>&lt;p&gt;Exception used for when a response is attempted to be sent after its already been sent&lt;/p&gt;</long-description>
        <tag line="16" name="uses" description="\RuntimeException" refers="\RuntimeException"/>
        <tag line="16" name="package" description="Klein\Exceptions"/>
      </docblock>
    </class>
  </file>
  <file path="Exceptions/UnhandledException.php" hash="18b9da7cbba19084c76c5976dac0a591" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\Exceptions" line="24" package="Klein\Exceptions">
      <extends>\RuntimeException</extends>
      <implements>\Klein\Exceptions\KleinExceptionInterface</implements>
      <name>UnhandledException</name>
      <full_name>\Klein\Exceptions\UnhandledException</full_name>
      <docblock line="16">
        <description>UnhandledException</description>
        <long-description>&lt;p&gt;Exception used for when a exception isn't correctly handled by the Klein error callbacks&lt;/p&gt;</long-description>
        <tag line="16" name="uses" description="\Klein\Exceptions\Exception" refers="\Klein\Exceptions\Exception"/>
        <tag line="16" name="package" description="Klein\Exceptions"/>
      </docblock>
    </class>
  </file>
  <file path="Exceptions/UnknownServiceException.php" hash="8ff371a67530079a5e0f964ae31cca13" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\Exceptions" line="24" package="Klein\Exceptions">
      <extends>\OutOfBoundsException</extends>
      <implements>\Klein\Exceptions\KleinExceptionInterface</implements>
      <name>UnknownServiceException</name>
      <full_name>\Klein\Exceptions\UnknownServiceException</full_name>
      <docblock line="16">
        <description>UnknownServiceException</description>
        <long-description>&lt;p&gt;Exception used for when a service was called that doesn't exist&lt;/p&gt;</long-description>
        <tag line="16" name="uses" description="\Klein\Exceptions\Exception" refers="\Klein\Exceptions\Exception"/>
        <tag line="16" name="package" description="Klein\Exceptions"/>
      </docblock>
    </class>
  </file>
  <file path="Exceptions/ValidationException.php" hash="171d8cdff5ad5c1966afda9186be0b29" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein\Exceptions" line="24" package="Klein\Exceptions">
      <extends>\UnexpectedValueException</extends>
      <implements>\Klein\Exceptions\KleinExceptionInterface</implements>
      <name>ValidationException</name>
      <full_name>\Klein\Exceptions\ValidationException</full_name>
      <docblock line="16">
        <description>ValidationException</description>
        <long-description>&lt;p&gt;Exception used for Validation errors&lt;/p&gt;</long-description>
        <tag line="16" name="uses" description="\Klein\Exceptions\Exception" refers="\Klein\Exceptions\Exception"/>
        <tag line="16" name="package" description="Klein\Exceptions"/>
      </docblock>
    </class>
  </file>
  <file path="HttpStatus.php" hash="a782a62ab5f54409f7e5476885aed0d8" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein" line="21" package="Klein">
      <extends/>
      <name>HttpStatus</name>
      <full_name>\Klein\HttpStatus</full_name>
      <docblock line="14">
        <description>HttpStatus</description>
        <long-description>&lt;p&gt;HTTP status code and message translator&lt;/p&gt;</long-description>
        <tag line="14" name="package" description="Klein"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="30" namespace="Klein" package="Default">
        <name>$code</name>
        <default></default>
        <docblock line="24">
          <description>The HTTP status code</description>
          <long-description></long-description>
          <tag line="24" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="24" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="Klein" package="Default">
        <name>$message</name>
        <default></default>
        <docblock line="32">
          <description>The HTTP status message</description>
          <long-description></long-description>
          <tag line="32" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="48" namespace="Klein" package="Default">
        <name>$http_messages</name>
        <default>array(100 =&gt; 'Continue', 101 =&gt; 'Switching Protocols', 200 =&gt; 'OK', 201 =&gt; 'Created', 202 =&gt; 'Accepted', 203 =&gt; 'Non-Authoritative Information', 204 =&gt; 'No Content', 205 =&gt; 'Reset Content', 206 =&gt; 'Partial Content', 300 =&gt; 'Multiple Choices', 301 =&gt; 'Moved Permanently', 302 =&gt; 'Found', 303 =&gt; 'See Other', 304 =&gt; 'Not Modified', 305 =&gt; 'Use Proxy', 306 =&gt; '(Unused)', 307 =&gt; 'Temporary Redirect', 400 =&gt; 'Bad Request', 401 =&gt; 'Unauthorized', 402 =&gt; 'Payment Required', 403 =&gt; 'Forbidden', 404 =&gt; 'Not Found', 405 =&gt; 'Method Not Allowed', 406 =&gt; 'Not Acceptable', 407 =&gt; 'Proxy Authentication Required', 408 =&gt; 'Request Timeout', 409 =&gt; 'Conflict', 410 =&gt; 'Gone', 411 =&gt; 'Length Required', 412 =&gt; 'Precondition Failed', 413 =&gt; 'Request Entity Too Large', 414 =&gt; 'Request-URI Too Long', 415 =&gt; 'Unsupported Media Type', 416 =&gt; 'Requested Range Not Satisfiable', 417 =&gt; 'Expectation Failed', 500 =&gt; 'Internal Server Error', 501 =&gt; 'Not Implemented', 502 =&gt; 'Bad Gateway', 503 =&gt; 'Service Unavailable', 504 =&gt; 'Gateway Timeout', 505 =&gt; 'HTTP Version Not Supported')</default>
        <docblock line="40">
          <description>HTTP 1.1 status messages based on code</description>
          <long-description></long-description>
          <tag line="40" name="link" description="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" link="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"/>
          <tag line="40" name="static" description=""/>
          <tag line="40" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="110" package="Klein">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="102">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="102" name="param" description="The HTTP code" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="102" name="param" description="(optional) HTTP message for the corresponding code" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="access" description="public"/>
          <tag line="102" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="127" package="Klein">
        <name>getCode</name>
        <full_name>getCode</full_name>
        <docblock line="121">
          <description>Get the HTTP status code</description>
          <long-description></long-description>
          <tag line="121" name="access" description="public"/>
          <tag line="121" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="138" package="Klein">
        <name>getMessage</name>
        <full_name>getMessage</full_name>
        <docblock line="132">
          <description>Get the HTTP status message</description>
          <long-description></long-description>
          <tag line="132" name="access" description="public"/>
          <tag line="132" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="150" package="Klein">
        <name>setCode</name>
        <full_name>setCode</full_name>
        <docblock line="143">
          <description>Set the HTTP status code</description>
          <long-description></long-description>
          <tag line="143" name="param" description="" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="143" name="access" description="public"/>
          <tag line="143" name="return" description="" type="\Klein\HttpStatus">
            <type by_reference="false">\Klein\HttpStatus</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="163" package="Klein">
        <name>setMessage</name>
        <full_name>setMessage</full_name>
        <docblock line="156">
          <description>Set the HTTP status message</description>
          <long-description></long-description>
          <tag line="156" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="access" description="public"/>
          <tag line="156" name="return" description="" type="\Klein\HttpStatus">
            <type by_reference="false">\Klein\HttpStatus</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="175" package="Klein">
        <name>getFormattedString</name>
        <full_name>getFormattedString</full_name>
        <docblock line="169">
          <description>Get a string representation of our HTTP status</description>
          <long-description></long-description>
          <tag line="169" name="access" description="public"/>
          <tag line="169" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="196" package="Klein">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="186">
          <description>Magic "__toString" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily use an instance of this class as a string
This method will be automatically called, returning a string representation
of this instance&lt;/p&gt;</long-description>
          <tag line="186" name="access" description="public"/>
          <tag line="186" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Klein" line="212" package="Klein">
        <name>getMessageFromCode</name>
        <full_name>getMessageFromCode</full_name>
        <docblock line="201">
          <description>Get our HTTP 1.1 message from our passed code</description>
          <long-description>&lt;p&gt;Returns null if no corresponding message was
found for the passed in code&lt;/p&gt;</long-description>
          <tag line="201" name="param" description="" type="int" variable="$int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="201" name="static" description=""/>
          <tag line="201" name="access" description="public"/>
          <tag line="201" name="return" description="| null" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$int</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Klein.php" hash="e1100349040c6af1c76d3c837f2c7e46" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <include line="338" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Klein" line="29" package="Klein">
      <extends/>
      <name>Klein</name>
      <full_name>\Klein\Klein</full_name>
      <docblock line="22">
        <description>Klein</description>
        <long-description>&lt;p&gt;Main Klein router class&lt;/p&gt;</long-description>
        <tag line="22" name="package" description="Klein"/>
      </docblock>
      <constant namespace="Klein" line="43" package="Klein">
        <name>DISPATCH_NO_CAPTURE</name>
        <full_name>DISPATCH_NO_CAPTURE</full_name>
        <value>0</value>
        <docblock line="36">
          <description>Dispatch route output handling</description>
          <long-description>&lt;p&gt;Don't capture anything. Behave as normal.&lt;/p&gt;</long-description>
          <tag line="36" name="const" description="int"/>
        </docblock>
      </constant>
      <constant namespace="Klein" line="52" package="Klein">
        <name>DISPATCH_CAPTURE_AND_RETURN</name>
        <full_name>DISPATCH_CAPTURE_AND_RETURN</full_name>
        <value>1</value>
        <docblock line="45">
          <description>Dispatch route output handling</description>
          <long-description>&lt;p&gt;Capture all output and return it from dispatch&lt;/p&gt;</long-description>
          <tag line="45" name="const" description="int"/>
        </docblock>
      </constant>
      <constant namespace="Klein" line="61" package="Klein">
        <name>DISPATCH_CAPTURE_AND_REPLACE</name>
        <full_name>DISPATCH_CAPTURE_AND_REPLACE</full_name>
        <value>2</value>
        <docblock line="54">
          <description>Dispatch route output handling</description>
          <long-description>&lt;p&gt;Capture all output and replace the response body with it&lt;/p&gt;</long-description>
          <tag line="54" name="const" description="int"/>
        </docblock>
      </constant>
      <constant namespace="Klein" line="70" package="Klein">
        <name>DISPATCH_CAPTURE_AND_PREPEND</name>
        <full_name>DISPATCH_CAPTURE_AND_PREPEND</full_name>
        <value>3</value>
        <docblock line="63">
          <description>Dispatch route output handling</description>
          <long-description>&lt;p&gt;Capture all output and prepend it to the response body&lt;/p&gt;</long-description>
          <tag line="63" name="const" description="int"/>
        </docblock>
      </constant>
      <constant namespace="Klein" line="79" package="Klein">
        <name>DISPATCH_CAPTURE_AND_APPEND</name>
        <full_name>DISPATCH_CAPTURE_AND_APPEND</full_name>
        <value>4</value>
        <docblock line="72">
          <description>Dispatch route output handling</description>
          <long-description>&lt;p&gt;Capture all output and append it to the response body&lt;/p&gt;</long-description>
          <tag line="72" name="const" description="int"/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="92" namespace="Klein" package="Default">
        <name>$routes</name>
        <default></default>
        <docblock line="86">
          <description>Collection of the routes to match on dispatch</description>
          <long-description></long-description>
          <tag line="86" name="var" description="" type="\Klein\DataCollection\RouteCollection">
            <type by_reference="false">\Klein\DataCollection\RouteCollection</type>
          </tag>
          <tag line="86" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="102" namespace="Klein" package="Default">
        <name>$namespace</name>
        <default></default>
        <docblock line="94">
          <description>The namespace of which to collect the routes in
when matching, so you can define routes under a
common endpoint</description>
          <long-description></long-description>
          <tag line="94" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="110" namespace="Klein" package="Default">
        <name>$errorCallbacks</name>
        <default>array()</default>
        <docblock line="104">
          <description>An array of error callback callables</description>
          <long-description></long-description>
          <tag line="104" name="var" description="" type="\Klein\array[callable]">
            <type by_reference="false">\Klein\array[callable]</type>
          </tag>
          <tag line="104" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="123" namespace="Klein" package="Default">
        <name>$request</name>
        <default></default>
        <docblock line="117">
          <description>The Request object passed to each matched route</description>
          <long-description></long-description>
          <tag line="117" name="var" description="" type="\Klein\Request">
            <type by_reference="false">\Klein\Request</type>
          </tag>
          <tag line="117" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="131" namespace="Klein" package="Default">
        <name>$response</name>
        <default></default>
        <docblock line="125">
          <description>The Response object passed to each matched route</description>
          <long-description></long-description>
          <tag line="125" name="var" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
          <tag line="125" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="139" namespace="Klein" package="Default">
        <name>$service</name>
        <default></default>
        <docblock line="133">
          <description>The service provider object passed to each matched route</description>
          <long-description></long-description>
          <tag line="133" name="var" description="" type="\Klein\ServiceProvider">
            <type by_reference="false">\Klein\ServiceProvider</type>
          </tag>
          <tag line="133" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="147" namespace="Klein" package="Default">
        <name>$app</name>
        <default></default>
        <docblock line="141">
          <description>A generic variable passed to each matched route</description>
          <long-description></long-description>
          <tag line="141" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="141" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="165" package="Klein">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="154">
          <description>Constructor</description>
          <long-description>&lt;p&gt;Create a new Klein instance with optionally injected dependencies
This DI allows for easy testing, object mocking, or class extension&lt;/p&gt;</long-description>
          <tag line="154" name="param" description="Service provider object responsible for utilitarian behaviors" type="\Klein\ServiceProvider" variable="$service">
            <type by_reference="false">\Klein\ServiceProvider</type>
          </tag>
          <tag line="154" name="param" description="An object passed to each route callback, defaults to a new App instance" type="mixed" variable="$app">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="154" name="param" description="Collection object responsible for containing all of the route instances" type="\Klein\DataCollection\RouteCollection" variable="$routes">
            <type by_reference="false">\Klein\DataCollection\RouteCollection</type>
          </tag>
          <tag line="154" name="access" description="public"/>
        </docblock>
        <argument line="165">
          <name>$service</name>
          <default>null</default>
          <type>\Klein\ServiceProvider</type>
        </argument>
        <argument line="165">
          <name>$app</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="165">
          <name>$routes</name>
          <default>null</default>
          <type>\Klein\DataCollection\RouteCollection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="179" package="Klein">
        <name>routes</name>
        <full_name>routes</full_name>
        <docblock line="173">
          <description>Returns the routes object</description>
          <long-description></long-description>
          <tag line="173" name="access" description="public"/>
          <tag line="173" name="return" description="" type="\Klein\DataCollection\RouteCollection">
            <type by_reference="false">\Klein\DataCollection\RouteCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="190" package="Klein">
        <name>request</name>
        <full_name>request</full_name>
        <docblock line="184">
          <description>Returns the request object</description>
          <long-description></long-description>
          <tag line="184" name="access" description="public"/>
          <tag line="184" name="return" description="" type="\Klein\Request">
            <type by_reference="false">\Klein\Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="201" package="Klein">
        <name>response</name>
        <full_name>response</full_name>
        <docblock line="195">
          <description>Returns the response object</description>
          <long-description></long-description>
          <tag line="195" name="access" description="public"/>
          <tag line="195" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="212" package="Klein">
        <name>service</name>
        <full_name>service</full_name>
        <docblock line="206">
          <description>Returns the service object</description>
          <long-description></long-description>
          <tag line="206" name="access" description="public"/>
          <tag line="206" name="return" description="" type="\Klein\ServiceProvider">
            <type by_reference="false">\Klein\ServiceProvider</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="223" package="Klein">
        <name>app</name>
        <full_name>app</full_name>
        <docblock line="217">
          <description>Returns the app object</description>
          <long-description></long-description>
          <tag line="217" name="access" description="public"/>
          <tag line="217" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="254" package="Klein">
        <name>respond</name>
        <full_name>respond</full_name>
        <docblock line="228">
          <description>Add a new route to be matched on dispatch</description>
          <long-description>&lt;p&gt;This method takes its arguments in a very loose format
The only "required" parameter is the callback (which is very strange considering the argument definition order)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$router = new Klein();

$router-&gt;respond( function() {
    echo 'this works';
});
$router-&gt;respond( '/endpoint', function() {
    echo 'this also works';
});
$router-&gt;respond( 'POST', '/endpoint', function() {
    echo 'this also works!!!!';
});
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="228" name="param" description="| array $method    HTTP Method to match" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="228" name="param" description="Route URI path to match" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="228" name="param" description="Callable callback method to execute on route match" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="228" name="access" description="public"/>
          <tag line="228" name="return" description="$callback" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="254">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="254">
          <name>$path</name>
          <default>'*'</default>
          <type/>
        </argument>
        <argument line="254">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="330" package="Klein">
        <name>with</name>
        <full_name>with</full_name>
        <docblock line="304">
          <description>Collect a set of routes under a common namespace</description>
          <long-description>&lt;p&gt;The routes may be passed in as either a callable (which holds the route definitions),
or as a string of a filename, of which to "include" under the Klein router scope&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$router = new Klein();

$router-&gt;with('/users', function() use ( $router) {
    $router-&gt;respond( '/', function() {
        // do something interesting
    });
    $router-&gt;respond( '/[i:id]', function() {
        // do something different
    });
});

$router-&gt;with('/cars', __DIR__ . '/routes/cars.php');
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="304" name="param" description="The namespace under which to collect the routes" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="304" name="param" description="| string[filename] $routes   The defined routes to collect under the namespace" type="callable" variable="$routes">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="304" name="access" description="public"/>
          <tag line="304" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="330">
          <name>$namespace</name>
          <default></default>
          <type/>
        </argument>
        <argument line="330">
          <name>$routes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="357" package="Klein">
        <name>dispatch</name>
        <full_name>dispatch</full_name>
        <docblock line="344">
          <description>Dispatch the request to the approriate route(s)</description>
          <long-description>&lt;p&gt;Dispatch with optionally injected dependencies
This DI allows for easy testing, object mocking, or class extension&lt;/p&gt;</long-description>
          <tag line="344" name="param" description="The request object to give to each callback" type="\Klein\Request" variable="$request">
            <type by_reference="false">\Klein\Request</type>
          </tag>
          <tag line="344" name="param" description="The response object to give to each callback" type="\Klein\Response" variable="$response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
          <tag line="344" name="param" description="Whether or not to &quot;send&quot; the response after the last route has been matched" type="boolean" variable="$send_response">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="344" name="param" description="Specify a DISPATCH_* constant to change the output capturing behavior" type="int" variable="$capture">
            <type by_reference="false">int</type>
          </tag>
          <tag line="344" name="access" description="public"/>
          <tag line="344" name="return" description="" type="void|string">
            <type by_reference="false">void</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="358">
          <name>$request</name>
          <default>null</default>
          <type>\Klein\Request</type>
        </argument>
        <argument line="359">
          <name>$response</name>
          <default>null</default>
          <type>\Klein\Response</type>
        </argument>
        <argument line="360">
          <name>$send_response</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="361">
          <name>$capture</name>
          <default>self::DISPATCH_NO_CAPTURE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Klein" line="606" package="Klein">
        <name>compileRoute</name>
        <full_name>compileRoute</full_name>
        <docblock line="599">
          <description>Compiles a route string to a regular expression</description>
          <long-description></long-description>
          <tag line="599" name="param" description="The route string to compile" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="599" name="access" description="protected"/>
          <tag line="599" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="606">
          <name>$route</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Klein" line="653" package="Klein">
        <name>handleResponseCallback</name>
        <full_name>handleResponseCallback</full_name>
        <docblock line="641">
          <description>Handle a response callback</description>
          <long-description>&lt;p&gt;This handles common exceptions and their output
to keep the "dispatch()" method DRY&lt;/p&gt;</long-description>
          <tag line="641" name="param" description="" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="641" name="param" description="" type="int" variable="$matched">
            <type by_reference="false">int</type>
          </tag>
          <tag line="641" name="param" description="" type="int" variable="$methods_matched">
            <type by_reference="false">int</type>
          </tag>
          <tag line="641" name="access" description="protected"/>
          <tag line="641" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="653">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
        <argument line="653">
          <name>$matched</name>
          <default></default>
          <type/>
        </argument>
        <argument line="653">
          <name>$methods_matched</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="684" package="Klein">
        <name>onError</name>
        <full_name>onError</full_name>
        <docblock line="677">
          <description>Adds an error callback to the stack of error handlers</description>
          <long-description></long-description>
          <tag line="677" name="param" description="The callable function to execute in the error handling chain" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="677" name="access" description="public"/>
          <tag line="677" name="return" description="" type="boolean|void">
            <type by_reference="false">boolean</type>
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="684">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Klein" line="697" package="Klein">
        <name>error</name>
        <full_name>error</full_name>
        <docblock line="689">
          <description>Routes an exception through the error callbacks</description>
          <long-description></long-description>
          <tag line="689" name="param" description="The exception that occurred" type="\Exception" variable="$err">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="689" name="throws" description="If the error/exception isn't handled by an error callback" type="\Klein\Exceptions\UnhandledException">
            <type by_reference="false">\Klein\Exceptions\UnhandledException</type>
          </tag>
          <tag line="689" name="access" description="protected"/>
          <tag line="689" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="697">
          <name>$err</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="739" package="Klein">
        <name>skipThis</name>
        <full_name>skipThis</full_name>
        <docblock line="732">
          <description>Quick alias to skip the current callback/route method from executing</description>
          <long-description></long-description>
          <tag line="732" name="throws" description="To halt/skip the current dispatch loop" type="\Klein\Exceptions\DispatchHaltedException">
            <type by_reference="false">\Klein\Exceptions\DispatchHaltedException</type>
          </tag>
          <tag line="732" name="access" description="public"/>
          <tag line="732" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="752" package="Klein">
        <name>skipNext</name>
        <full_name>skipNext</full_name>
        <docblock line="744">
          <description>Quick alias to skip the next callback/route method from executing</description>
          <long-description></long-description>
          <tag line="744" name="param" description="The number of next matches to skip" type="int" variable="$num">
            <type by_reference="false">int</type>
          </tag>
          <tag line="744" name="throws" description="To halt/skip the current dispatch loop" type="\Klein\Exceptions\DispatchHaltedException">
            <type by_reference="false">\Klein\Exceptions\DispatchHaltedException</type>
          </tag>
          <tag line="744" name="access" description="public"/>
          <tag line="744" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="752">
          <name>$num</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="767" package="Klein">
        <name>skipRemaining</name>
        <full_name>skipRemaining</full_name>
        <docblock line="760">
          <description>Quick alias to stop the remaining callbacks/route methods from executing</description>
          <long-description></long-description>
          <tag line="760" name="throws" description="To halt/skip the current dispatch loop" type="\Klein\Exceptions\DispatchHaltedException">
            <type by_reference="false">\Klein\Exceptions\DispatchHaltedException</type>
          </tag>
          <tag line="760" name="access" description="public"/>
          <tag line="760" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="780" package="Klein">
        <name>abort</name>
        <full_name>abort</full_name>
        <docblock line="772">
          <description>Alias to set a response code, lock the response, and halt the route matching/dispatching</description>
          <long-description></long-description>
          <tag line="772" name="param" description="Optional HTTP status code to send" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="772" name="throws" description="To halt/skip the current dispatch loop" type="\Klein\Exceptions\DispatchHaltedException">
            <type by_reference="false">\Klein\Exceptions\DispatchHaltedException</type>
          </tag>
          <tag line="772" name="access" description="public"/>
          <tag line="772" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="780">
          <name>$code</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="800" package="Klein">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="792">
          <description>GET alias for "respond()"</description>
          <long-description></long-description>
          <tag line="792" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="792" name="param" description="" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="792" name="access" description="public"/>
          <tag line="792" name="return" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="800">
          <name>$route</name>
          <default>'*'</default>
          <type/>
        </argument>
        <argument line="800">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="817" package="Klein">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="809">
          <description>POST alias for "respond()"</description>
          <long-description></long-description>
          <tag line="809" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="809" name="param" description="" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="809" name="access" description="public"/>
          <tag line="809" name="return" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="817">
          <name>$route</name>
          <default>'*'</default>
          <type/>
        </argument>
        <argument line="817">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="834" package="Klein">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="826">
          <description>PUT alias for "respond()"</description>
          <long-description></long-description>
          <tag line="826" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="826" name="param" description="" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="826" name="access" description="public"/>
          <tag line="826" name="return" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="834">
          <name>$route</name>
          <default>'*'</default>
          <type/>
        </argument>
        <argument line="834">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="851" package="Klein">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="843">
          <description>DELETE alias for "respond()"</description>
          <long-description></long-description>
          <tag line="843" name="param" description="" type="string" variable="$route">
            <type by_reference="false">string</type>
          </tag>
          <tag line="843" name="param" description="" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="843" name="access" description="public"/>
          <tag line="843" name="return" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
        <argument line="851">
          <name>$route</name>
          <default>'*'</default>
          <type/>
        </argument>
        <argument line="851">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Request.php" hash="b481b4ef31b7af5ad415f3f3f0d8cd60" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein" line="23" package="Klein">
      <extends/>
      <name>Request</name>
      <full_name>\Klein\Request</full_name>
      <docblock line="18">
        <description>Request</description>
        <long-description></long-description>
        <tag line="18" name="package" description="Klein"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" namespace="Klein" package="Default">
        <name>$id</name>
        <default></default>
        <docblock line="30">
          <description>Unique identifier for the request</description>
          <long-description></long-description>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="Klein" package="Default">
        <name>$params_get</name>
        <default></default>
        <docblock line="38">
          <description>GET (query) parameters</description>
          <long-description></long-description>
          <tag line="38" name="var" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
          <tag line="38" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="Klein" package="Default">
        <name>$params_post</name>
        <default></default>
        <docblock line="46">
          <description>POST parameters</description>
          <long-description></long-description>
          <tag line="46" name="var" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
          <tag line="46" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" namespace="Klein" package="Default">
        <name>$params_named</name>
        <default></default>
        <docblock line="54">
          <description>Named parameters</description>
          <long-description></long-description>
          <tag line="54" name="var" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
          <tag line="54" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="68" namespace="Klein" package="Default">
        <name>$cookies</name>
        <default></default>
        <docblock line="62">
          <description>Client cookie data</description>
          <long-description></long-description>
          <tag line="62" name="var" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
          <tag line="62" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="76" namespace="Klein" package="Default">
        <name>$server</name>
        <default></default>
        <docblock line="70">
          <description>Server created attributes</description>
          <long-description></long-description>
          <tag line="70" name="var" description="" type="\Klein\DataCollection\ServerDataCollection">
            <type by_reference="false">\Klein\DataCollection\ServerDataCollection</type>
          </tag>
          <tag line="70" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="84" namespace="Klein" package="Default">
        <name>$headers</name>
        <default></default>
        <docblock line="78">
          <description>HTTP request headers</description>
          <long-description></long-description>
          <tag line="78" name="var" description="" type="\Klein\DataCollection\HeaderDataCollection">
            <type by_reference="false">\Klein\DataCollection\HeaderDataCollection</type>
          </tag>
          <tag line="78" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="92" namespace="Klein" package="Default">
        <name>$files</name>
        <default></default>
        <docblock line="86">
          <description>Uploaded temporary files</description>
          <long-description></long-description>
          <tag line="86" name="var" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
          <tag line="86" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="100" namespace="Klein" package="Default">
        <name>$body</name>
        <default></default>
        <docblock line="94">
          <description>The request body</description>
          <long-description></long-description>
          <tag line="94" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="120" package="Klein">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="107">
          <description>Constructor</description>
          <long-description>&lt;p&gt;Create a new Request object and define all of its request data&lt;/p&gt;</long-description>
          <tag line="107" name="param" description="" type="array" variable="$params_get">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="param" description="" type="array" variable="$params_post">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="param" description="" type="array" variable="$cookies">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="param" description="" type="array" variable="$server">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="param" description="" type="array" variable="$files">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="param" description="" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="access" description="public"/>
        </docblock>
        <argument line="121">
          <name>$params_get</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="122">
          <name>$params_post</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="123">
          <name>$cookies</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="124">
          <name>$server</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="125">
          <name>$files</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="126">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Klein" line="149" package="Klein">
        <name>createFromGlobals</name>
        <full_name>createFromGlobals</full_name>
        <docblock line="141">
          <description>Create a new request object using the built-in "superglobals"</description>
          <long-description></long-description>
          <tag line="141" name="link" description="http://php.net/manual/en/language.variables.superglobals.php" link="http://php.net/manual/en/language.variables.superglobals.php"/>
          <tag line="141" name="static" description=""/>
          <tag line="141" name="access" description="public"/>
          <tag line="141" name="return" description="" type="\Klein\Request">
            <type by_reference="false">\Klein\Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="171" package="Klein">
        <name>id</name>
        <full_name>id</full_name>
        <docblock line="162">
          <description>Gets a unique ID for the request</description>
          <long-description>&lt;p&gt;Generates one on the first call&lt;/p&gt;</long-description>
          <tag line="162" name="param" description="Whether or not to hash the ID on creation" type="boolean" variable="$hash">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="162" name="access" description="public"/>
          <tag line="162" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$hash</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="190" package="Klein">
        <name>paramsGet</name>
        <full_name>paramsGet</full_name>
        <docblock line="184">
          <description>Returns the GET parameters collection</description>
          <long-description></long-description>
          <tag line="184" name="access" description="public"/>
          <tag line="184" name="return" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="201" package="Klein">
        <name>paramsPost</name>
        <full_name>paramsPost</full_name>
        <docblock line="195">
          <description>Returns the POST parameters collection</description>
          <long-description></long-description>
          <tag line="195" name="access" description="public"/>
          <tag line="195" name="return" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="212" package="Klein">
        <name>paramsNamed</name>
        <full_name>paramsNamed</full_name>
        <docblock line="206">
          <description>Returns the named parameters collection</description>
          <long-description></long-description>
          <tag line="206" name="access" description="public"/>
          <tag line="206" name="return" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="223" package="Klein">
        <name>cookies</name>
        <full_name>cookies</full_name>
        <docblock line="217">
          <description>Returns the cookies collection</description>
          <long-description></long-description>
          <tag line="217" name="access" description="public"/>
          <tag line="217" name="return" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="234" package="Klein">
        <name>server</name>
        <full_name>server</full_name>
        <docblock line="228">
          <description>Returns the server collection</description>
          <long-description></long-description>
          <tag line="228" name="access" description="public"/>
          <tag line="228" name="return" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="245" package="Klein">
        <name>headers</name>
        <full_name>headers</full_name>
        <docblock line="239">
          <description>Returns the headers collection</description>
          <long-description></long-description>
          <tag line="239" name="access" description="public"/>
          <tag line="239" name="return" description="" type="\Klein\DataCollection\HeaderDataCollection">
            <type by_reference="false">\Klein\DataCollection\HeaderDataCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="256" package="Klein">
        <name>files</name>
        <full_name>files</full_name>
        <docblock line="250">
          <description>Returns the files collection</description>
          <long-description></long-description>
          <tag line="250" name="access" description="public"/>
          <tag line="250" name="return" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="267" package="Klein">
        <name>body</name>
        <full_name>body</full_name>
        <docblock line="261">
          <description>Gets the request body</description>
          <long-description></long-description>
          <tag line="261" name="access" description="public"/>
          <tag line="261" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="290" package="Klein">
        <name>params</name>
        <full_name>params</full_name>
        <docblock line="277">
          <description>Returns all parameters (GET, POST, named, and cookies) that match the mask</description>
          <long-description>&lt;p&gt;Takes an optional mask param that contains the names of any params
you'd like this method to exclude in the returned array&lt;/p&gt;</long-description>
          <tag line="277" name="see" description="\Klein\DataCollection\DataCollection::all()" refers="\Klein\DataCollection\DataCollection::all()"/>
          <tag line="277" name="param" description="The parameter mask array" type="array" variable="$mask">
            <type by_reference="false">array</type>
          </tag>
          <tag line="277" name="param" description="Whether or not to fill the returned array&#10; with null values to match the given mask" type="boolean" variable="$fill_with_nulls">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="277" name="access" description="public"/>
          <tag line="277" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$mask</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="290">
          <name>$fill_with_nulls</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="320" package="Klein">
        <name>param</name>
        <full_name>param</full_name>
        <docblock line="312">
          <description>Return a request parameter, or $default if it doesn't exist</description>
          <long-description></long-description>
          <tag line="312" name="param" description="The name of the parameter to return" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="312" name="param" description="The default value of the parameter if it contains no value" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="312" name="access" description="public"/>
          <tag line="312" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="320">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="320">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="338" package="Klein">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="328">
          <description>Magic "__isset" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily check the existence of a parameter
from this instance while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="328" name="param" description="The name of the parameter" type="string" variable="$param">
            <type by_reference="false">string</type>
          </tag>
          <tag line="328" name="access" description="public"/>
          <tag line="328" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="338">
          <name>$param</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="356" package="Klein">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="346">
          <description>Magic "__get" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily request a parameter from this instance
while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="346" name="param" description="The name of the parameter" type="string" variable="$param">
            <type by_reference="false">string</type>
          </tag>
          <tag line="346" name="access" description="public"/>
          <tag line="346" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="356">
          <name>$param</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="375" package="Klein">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="361">
          <description>Magic "__set" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily set a parameter from this instance
while treating it as an instance property&lt;/p&gt;

&lt;p&gt;NOTE: This currently sets the "named" parameters, since that's the
one collection that we have the most sane control over&lt;/p&gt;</long-description>
          <tag line="361" name="param" description="The name of the parameter" type="string" variable="$param">
            <type by_reference="false">string</type>
          </tag>
          <tag line="361" name="param" description="The value of the parameter" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="361" name="access" description="public"/>
          <tag line="361" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="375">
          <name>$param</name>
          <default></default>
          <type/>
        </argument>
        <argument line="375">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="390" package="Klein">
        <name>__unset</name>
        <full_name>__unset</full_name>
        <docblock line="380">
          <description>Magic "__unset" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily remove a parameter from this instance
while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="380" name="param" description="The name of the parameter" type="string" variable="$param">
            <type by_reference="false">string</type>
          </tag>
          <tag line="380" name="access" description="public"/>
          <tag line="380" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$param</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="401" package="Klein">
        <name>isSecure</name>
        <full_name>isSecure</full_name>
        <docblock line="395">
          <description>Is the request secure?</description>
          <long-description></long-description>
          <tag line="395" name="access" description="public"/>
          <tag line="395" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="412" package="Klein">
        <name>ip</name>
        <full_name>ip</full_name>
        <docblock line="406">
          <description>Gets the request IP address</description>
          <long-description></long-description>
          <tag line="406" name="access" description="public"/>
          <tag line="406" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="423" package="Klein">
        <name>userAgent</name>
        <full_name>userAgent</full_name>
        <docblock line="417">
          <description>Gets the request user agent</description>
          <long-description></long-description>
          <tag line="417" name="access" description="public"/>
          <tag line="417" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="434" package="Klein">
        <name>uri</name>
        <full_name>uri</full_name>
        <docblock line="428">
          <description>Gets the request URI</description>
          <long-description></long-description>
          <tag line="428" name="access" description="public"/>
          <tag line="428" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="445" package="Klein">
        <name>pathname</name>
        <full_name>pathname</full_name>
        <docblock line="439">
          <description>Get the request's pathname</description>
          <long-description></long-description>
          <tag line="439" name="access" description="public"/>
          <tag line="439" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="470" package="Klein">
        <name>method</name>
        <full_name>method</full_name>
        <docblock line="455">
          <description>Gets the request method, or checks it against $is</description>
          <long-description>&lt;pre&gt;&lt;code&gt;// POST request example
$request-&gt;method() // returns 'POST'
$request-&gt;method('post') // returns true
$request-&gt;method('get') // returns false
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="455" name="param" description="The method to check the current request method against" type="string" variable="$is">
            <type by_reference="false">string</type>
          </tag>
          <tag line="455" name="param" description="Whether or not to allow HTTP method overriding via header or params" type="boolean" variable="$allow_override">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="455" name="access" description="public"/>
          <tag line="455" name="return" description="| boolean" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="470">
          <name>$is</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="470">
          <name>$allow_override</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="502" package="Klein">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="494">
          <description>Adds to or modifies the current query string</description>
          <long-description></long-description>
          <tag line="494" name="param" description="The name of the query param" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="494" name="param" description="The value of the query param" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="494" name="access" description="public"/>
          <tag line="494" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="502">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="502">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Response.php" hash="d4f9b8d23ab6cc7b4a71a57b1347b407" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein" line="25" package="Klein">
      <extends/>
      <name>Response</name>
      <full_name>\Klein\Response</full_name>
      <docblock line="20">
        <description>Response</description>
        <long-description></long-description>
        <tag line="20" name="package" description="Klein"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="39" namespace="Klein" package="Default">
        <name>$default_status_code</name>
        <default>200</default>
        <docblock line="32">
          <description>The default response HTTP status code</description>
          <long-description></long-description>
          <tag line="32" name="static" description=""/>
          <tag line="32" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="32" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="Klein" package="Default">
        <name>$protocol_version</name>
        <default>'1.1'</default>
        <docblock line="41">
          <description>The HTTP version of the response</description>
          <long-description></long-description>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" namespace="Klein" package="Default">
        <name>$body</name>
        <default></default>
        <docblock line="49">
          <description>The response body</description>
          <long-description></long-description>
          <tag line="49" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" namespace="Klein" package="Default">
        <name>$status</name>
        <default></default>
        <docblock line="57">
          <description>HTTP response status</description>
          <long-description></long-description>
          <tag line="57" name="var" description="" type="\Klein\HttpStatus">
            <type by_reference="false">\Klein\HttpStatus</type>
          </tag>
          <tag line="57" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="71" namespace="Klein" package="Default">
        <name>$headers</name>
        <default></default>
        <docblock line="65">
          <description>HTTP response headers</description>
          <long-description></long-description>
          <tag line="65" name="var" description="" type="\Klein\DataCollection\HeaderDataCollection">
            <type by_reference="false">\Klein\DataCollection\HeaderDataCollection</type>
          </tag>
          <tag line="65" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="79" namespace="Klein" package="Default">
        <name>$cookies</name>
        <default></default>
        <docblock line="73">
          <description>HTTP response cookies</description>
          <long-description></long-description>
          <tag line="73" name="var" description="" type="\Klein\DataCollection\ResponseCookieDataCollection">
            <type by_reference="false">\Klein\DataCollection\ResponseCookieDataCollection</type>
          </tag>
          <tag line="73" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" namespace="Klein" package="Default">
        <name>$locked</name>
        <default>false</default>
        <docblock line="81">
          <description>Whether or not the response is "locked" from
any further modification</description>
          <long-description></long-description>
          <tag line="81" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="81" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="96" namespace="Klein" package="Default">
        <name>$sent</name>
        <default>false</default>
        <docblock line="90">
          <description>Whether or not the response has been sent</description>
          <long-description></long-description>
          <tag line="90" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="90" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="104" namespace="Klein" package="Default">
        <name>$chunked</name>
        <default>false</default>
        <docblock line="98">
          <description>Whether the response has been chunked or not</description>
          <long-description></long-description>
          <tag line="98" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="98" name="access" description="public"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="121" package="Klein">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="111">
          <description>Constructor</description>
          <long-description>&lt;p&gt;Create a new Response object with a dependency injected Headers instance&lt;/p&gt;</long-description>
          <tag line="111" name="param" description="The response body's content" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="The status code" type="int" variable="$status_code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="111" name="param" description="The response header &quot;hash&quot;" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="111" name="access" description="public"/>
        </docblock>
        <argument line="121">
          <name>$body</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="121">
          <name>$status_code</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="121">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="144" package="Klein">
        <name>protocolVersion</name>
        <full_name>protocolVersion</full_name>
        <docblock line="133">
          <description>Get (or set) the HTTP protocol version</description>
          <long-description>&lt;p&gt;Simply calling this method without any arguments returns the current protocol version.
Calling with an integer argument, however, attempts to set the protocol version to what
was provided by the argument.&lt;/p&gt;</long-description>
          <tag line="133" name="param" description="" type="string" variable="$protocol_version">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="access" description="public"/>
          <tag line="133" name="return" description="" type="string|\Klein\Response">
            <type by_reference="false">string</type>
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$protocol_version</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="168" package="Klein">
        <name>body</name>
        <full_name>body</full_name>
        <docblock line="158">
          <description>Get (or set) the response's body content</description>
          <long-description>&lt;p&gt;Simply calling this method without any arguments returns the current response body.
Calling with an argument, however, sets the response body to what was provided by the argument.&lt;/p&gt;</long-description>
          <tag line="158" name="param" description="The body content string" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="158" name="access" description="public"/>
          <tag line="158" name="return" description="" type="string|\Klein\Response">
            <type by_reference="false">string</type>
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="188" package="Klein">
        <name>status</name>
        <full_name>status</full_name>
        <docblock line="182">
          <description>Returns the status object</description>
          <long-description></long-description>
          <tag line="182" name="access" description="public"/>
          <tag line="182" name="return" description="" type="\Klein\HttpStatus">
            <type by_reference="false">\Klein\HttpStatus</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="199" package="Klein">
        <name>headers</name>
        <full_name>headers</full_name>
        <docblock line="193">
          <description>Returns the headers collection</description>
          <long-description></long-description>
          <tag line="193" name="access" description="public"/>
          <tag line="193" name="return" description="" type="\Klein\DataCollection\HeaderDataCollection">
            <type by_reference="false">\Klein\DataCollection\HeaderDataCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="210" package="Klein">
        <name>cookies</name>
        <full_name>cookies</full_name>
        <docblock line="204">
          <description>Returns the cookies collection</description>
          <long-description></long-description>
          <tag line="204" name="access" description="public"/>
          <tag line="204" name="return" description="" type="\Klein\DataCollection\ResponseCookieDataCollection">
            <type by_reference="false">\Klein\DataCollection\ResponseCookieDataCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="226" package="Klein">
        <name>code</name>
        <full_name>code</full_name>
        <docblock line="215">
          <description>Get (or set) the HTTP response code</description>
          <long-description>&lt;p&gt;Simply calling this method without any arguments returns the current response code.
Calling with an integer argument, however, attempts to set the response code to what
was provided by the argument.&lt;/p&gt;</long-description>
          <tag line="215" name="param" description="The HTTP status code to send" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="215" name="access" description="public"/>
          <tag line="215" name="return" description="" type="int|\Klein\Response">
            <type by_reference="false">int</type>
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$code</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="247" package="Klein">
        <name>prepend</name>
        <full_name>prepend</full_name>
        <docblock line="240">
          <description>Prepend a string to the response's content body</description>
          <long-description></long-description>
          <tag line="240" name="param" description="The string to prepend" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="240" name="access" description="public"/>
          <tag line="240" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="264" package="Klein">
        <name>append</name>
        <full_name>append</full_name>
        <docblock line="257">
          <description>Append a string to the response's content body</description>
          <long-description></long-description>
          <tag line="257" name="param" description="The string to append" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="257" name="access" description="public"/>
          <tag line="257" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="280" package="Klein">
        <name>isLocked</name>
        <full_name>isLocked</full_name>
        <docblock line="274">
          <description>Check if the response is locked</description>
          <long-description></long-description>
          <tag line="274" name="access" description="public"/>
          <tag line="274" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="296" package="Klein">
        <name>requireUnlocked</name>
        <full_name>requireUnlocked</full_name>
        <docblock line="285">
          <description>Require that the response is unlocked</description>
          <long-description>&lt;p&gt;Throws an exception if the response is locked,
preventing any methods from mutating the response
when its locked&lt;/p&gt;</long-description>
          <tag line="285" name="throws" description="If the response is locked" type="\Klein\Exceptions\LockedResponseException">
            <type by_reference="false">\Klein\Exceptions\LockedResponseException</type>
          </tag>
          <tag line="285" name="access" description="public"/>
          <tag line="285" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="311" package="Klein">
        <name>lock</name>
        <full_name>lock</full_name>
        <docblock line="305">
          <description>Lock the response from further modification</description>
          <long-description></long-description>
          <tag line="305" name="access" description="public"/>
          <tag line="305" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="324" package="Klein">
        <name>unlock</name>
        <full_name>unlock</full_name>
        <docblock line="318">
          <description>Unlock the response from further modification</description>
          <long-description></long-description>
          <tag line="318" name="access" description="public"/>
          <tag line="318" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Klein" line="339" package="Klein">
        <name>httpStatusLine</name>
        <full_name>httpStatusLine</full_name>
        <docblock line="331">
          <description>Generates an HTTP compatible status header line string</description>
          <long-description>&lt;p&gt;Creates the string based off of the response's properties&lt;/p&gt;</long-description>
          <tag line="331" name="access" description="protected"/>
          <tag line="331" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="352" package="Klein">
        <name>sendHeaders</name>
        <full_name>sendHeaders</full_name>
        <docblock line="344">
          <description>Send our HTTP headers</description>
          <long-description></long-description>
          <tag line="344" name="param" description="Whether or not to also send the cookies after sending the normal headers" type="boolean" variable="$cookies_also">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="344" name="param" description="Whether or not to override the check if headers have already been sent" type="boolean" variable="$override">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="344" name="access" description="public"/>
          <tag line="344" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="352">
          <name>$cookies_also</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="352">
          <name>$override</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="380" package="Klein">
        <name>sendCookies</name>
        <full_name>sendCookies</full_name>
        <docblock line="373">
          <description>Send our HTTP response cookies</description>
          <long-description></long-description>
          <tag line="373" name="param" description="Whether or not to override the check if headers have already been sent" type="boolean" variable="$override">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="373" name="access" description="public"/>
          <tag line="373" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="380">
          <name>$override</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="409" package="Klein">
        <name>sendBody</name>
        <full_name>sendBody</full_name>
        <docblock line="403">
          <description>Send our body's contents</description>
          <long-description></long-description>
          <tag line="403" name="access" description="public"/>
          <tag line="403" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="424" package="Klein">
        <name>send</name>
        <full_name>send</full_name>
        <docblock line="416">
          <description>Send the response and lock it</description>
          <long-description></long-description>
          <tag line="416" name="param" description="Whether or not to override the check if the response has already been sent" type="boolean" variable="$override">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="416" name="throws" description="If the response has already been sent" type="\Klein\Exceptions\ResponseAlreadySentException">
            <type by_reference="false">\Klein\Exceptions\ResponseAlreadySentException</type>
          </tag>
          <tag line="416" name="access" description="public"/>
          <tag line="416" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="424">
          <name>$override</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="454" package="Klein">
        <name>isSent</name>
        <full_name>isSent</full_name>
        <docblock line="448">
          <description>Check if the response has been sent</description>
          <long-description></long-description>
          <tag line="448" name="access" description="public"/>
          <tag line="448" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="468" package="Klein">
        <name>chunk</name>
        <full_name>chunk</full_name>
        <docblock line="459">
          <description>Enable response chunking</description>
          <long-description></long-description>
          <tag line="459" name="link" description="https://github.com/chriso/klein.php/wiki/Response-Chunking" link="https://github.com/chriso/klein.php/wiki/Response-Chunking"/>
          <tag line="459" name="link" description="http://bit.ly/hg3gHb" link="http://bit.ly/hg3gHb"/>
          <tag line="459" name="param" description="An optional string to send as a response &quot;chunk&quot;" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="459" name="access" description="public"/>
          <tag line="459" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="468">
          <name>$str</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="497" package="Klein">
        <name>header</name>
        <full_name>header</full_name>
        <docblock line="489">
          <description>Sets a response header</description>
          <long-description></long-description>
          <tag line="489" name="param" description="The name of the HTTP response header" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="489" name="param" description="The value to set the header with" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="489" name="access" description="public"/>
          <tag line="489" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="497">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="497">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="517" package="Klein">
        <name>cookie</name>
        <full_name>cookie</full_name>
        <docblock line="504">
          <description>Sets a response cookie</description>
          <long-description></long-description>
          <tag line="504" name="param" description="The name of the cookie" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="504" name="param" description="The value to set the cookie with" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="504" name="param" description="The time that the cookie should expire" type="int" variable="$expiry">
            <type by_reference="false">int</type>
          </tag>
          <tag line="504" name="param" description="The path of which to restrict the cookie" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="504" name="param" description="The domain of which to restrict the cookie" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="504" name="param" description="Flag of whether the cookie should only be sent over a HTTPS connection" type="boolean" variable="$secure">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="504" name="param" description="Flag of whether the cookie should only be accessible over the HTTP protocol" type="boolean" variable="$httponly">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="504" name="access" description="public"/>
          <tag line="504" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="518">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="519">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="520">
          <name>$expiry</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="521">
          <name>$path</name>
          <default>'/'</default>
          <type/>
        </argument>
        <argument line="522">
          <name>$domain</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="523">
          <name>$secure</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="524">
          <name>$httponly</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="544" package="Klein">
        <name>noCache</name>
        <full_name>noCache</full_name>
        <docblock line="538">
          <description>Tell the browser not to cache the response</description>
          <long-description></long-description>
          <tag line="538" name="access" description="public"/>
          <tag line="538" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="560" package="Klein">
        <name>redirect</name>
        <full_name>redirect</full_name>
        <docblock line="552">
          <description>Redirects the request to another URL</description>
          <long-description></long-description>
          <tag line="552" name="param" description="The URL to redirect to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="552" name="param" description="The HTTP status code to use for redirection" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="552" name="access" description="public"/>
          <tag line="552" name="return" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
        </docblock>
        <argument line="560">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="560">
          <name>$code</name>
          <default>302</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="576" package="Klein">
        <name>dump</name>
        <full_name>dump</full_name>
        <docblock line="569">
          <description>Dump a variable</description>
          <long-description></long-description>
          <tag line="569" name="param" description="The variable to dump" type="mixed" variable="$obj">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="569" name="access" description="public"/>
          <tag line="569" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="576">
          <name>$obj</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="594" package="Klein">
        <name>file</name>
        <full_name>file</full_name>
        <docblock line="585">
          <description>Sends a file</description>
          <long-description></long-description>
          <tag line="585" name="param" description="The path of the file to send" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="585" name="param" description="The file's name" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="585" name="param" description="The MIME type of the file" type="string" variable="$mimetype">
            <type by_reference="false">string</type>
          </tag>
          <tag line="585" name="access" description="public"/>
          <tag line="585" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="594">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="594">
          <name>$filename</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="594">
          <name>$mimetype</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="625" package="Klein">
        <name>json</name>
        <full_name>json</full_name>
        <docblock line="617">
          <description>Sends an object as json or jsonp by providing the padding prefix</description>
          <long-description></long-description>
          <tag line="617" name="param" description="The data to encode as JSON" type="mixed" variable="$object">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="617" name="param" description="The name of the JSON-P function prefix" type="string" variable="$jsonp_prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="617" name="access" description="public"/>
          <tag line="617" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="625">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
        <argument line="625">
          <name>$jsonp_prefix</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="ResponseCookie.php" hash="869dc47a198255aea04d4549c6df7692" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein" line="21" package="Klein">
      <extends/>
      <name>ResponseCookie</name>
      <full_name>\Klein\ResponseCookie</full_name>
      <docblock line="14">
        <description>ResponseCookie</description>
        <long-description>&lt;p&gt;Class to represent an HTTP response cookie&lt;/p&gt;</long-description>
        <tag line="14" name="package" description="Klein"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Klein" package="Default">
        <name>$name</name>
        <default></default>
        <docblock line="28">
          <description>The name of the cookie</description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="Klein" package="Default">
        <name>$value</name>
        <default></default>
        <docblock line="36">
          <description>The string "value" of the cookie</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="Klein" package="Default">
        <name>$expire</name>
        <default></default>
        <docblock line="44">
          <description>The date/time that the cookie should expire</description>
          <long-description>&lt;p&gt;Represented by a Unix "Timestamp"&lt;/p&gt;</long-description>
          <tag line="44" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="44" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" namespace="Klein" package="Default">
        <name>$path</name>
        <default></default>
        <docblock line="54">
          <description>The path on the server that the cookie will
be available on</description>
          <long-description></long-description>
          <tag line="54" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="69" namespace="Klein" package="Default">
        <name>$domain</name>
        <default></default>
        <docblock line="63">
          <description>The domain that the cookie is available to</description>
          <long-description></long-description>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" namespace="Klein" package="Default">
        <name>$secure</name>
        <default></default>
        <docblock line="71">
          <description>Whether the cookie should only be transferred
over an HTTPS connection or not</description>
          <long-description></long-description>
          <tag line="71" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="71" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" namespace="Klein" package="Default">
        <name>$http_only</name>
        <default></default>
        <docblock line="80">
          <description>Whether the cookie will be available through HTTP
only (not available to be accessed through
client-side scripting languages like JavaScript)</description>
          <long-description></long-description>
          <tag line="80" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="80" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="107" package="Klein">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="95">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="95" name="param" description="The name of the cookie" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="The value to set the cookie with" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="The time that the cookie should expire" type="int" variable="$expire">
            <type by_reference="false">int</type>
          </tag>
          <tag line="95" name="param" description="The path of which to restrict the cookie" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="The domain of which to restrict the cookie" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="Flag of whether the cookie should only be sent over a HTTPS connection" type="boolean" variable="$secure">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="95" name="param" description="Flag of whether the cookie should only be accessible over the HTTP protocol" type="boolean" variable="$http_only">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="95" name="access" description="public"/>
        </docblock>
        <argument line="108">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="110">
          <name>$expire</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="111">
          <name>$path</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="112">
          <name>$domain</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="113">
          <name>$secure</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="114">
          <name>$http_only</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="132" package="Klein">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="126">
          <description>Gets the cookie's name</description>
          <long-description></long-description>
          <tag line="126" name="access" description="public"/>
          <tag line="126" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="144" package="Klein">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="137">
          <description>Sets the cookie's name</description>
          <long-description></long-description>
          <tag line="137" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="access" description="public"/>
          <tag line="137" name="return" description="" type="\Klein\ResponseCookie">
            <type by_reference="false">\Klein\ResponseCookie</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="157" package="Klein">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="151">
          <description>Gets the cookie's value</description>
          <long-description></long-description>
          <tag line="151" name="access" description="public"/>
          <tag line="151" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="169" package="Klein">
        <name>setValue</name>
        <full_name>setValue</full_name>
        <docblock line="162">
          <description>Sets the cookie's value</description>
          <long-description></long-description>
          <tag line="162" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="access" description="public"/>
          <tag line="162" name="return" description="" type="\Klein\ResponseCookie">
            <type by_reference="false">\Klein\ResponseCookie</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="186" package="Klein">
        <name>getExpire</name>
        <full_name>getExpire</full_name>
        <docblock line="180">
          <description>Gets the cookie's expire time</description>
          <long-description></long-description>
          <tag line="180" name="access" description="public"/>
          <tag line="180" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="201" package="Klein">
        <name>setExpire</name>
        <full_name>setExpire</full_name>
        <docblock line="191">
          <description>Sets the cookie's expire time</description>
          <long-description>&lt;p&gt;The time should be an integer
representing a Unix timestamp&lt;/p&gt;</long-description>
          <tag line="191" name="param" description="" type="int" variable="$expire">
            <type by_reference="false">int</type>
          </tag>
          <tag line="191" name="access" description="public"/>
          <tag line="191" name="return" description="" type="\Klein\ResponseCookie">
            <type by_reference="false">\Klein\ResponseCookie</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$expire</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="218" package="Klein">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="212">
          <description>Gets the cookie's path</description>
          <long-description></long-description>
          <tag line="212" name="access" description="public"/>
          <tag line="212" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="230" package="Klein">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <docblock line="223">
          <description>Sets the cookie's path</description>
          <long-description></long-description>
          <tag line="223" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="223" name="access" description="public"/>
          <tag line="223" name="return" description="" type="\Klein\ResponseCookie">
            <type by_reference="false">\Klein\ResponseCookie</type>
          </tag>
        </docblock>
        <argument line="230">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="247" package="Klein">
        <name>getDomain</name>
        <full_name>getDomain</full_name>
        <docblock line="241">
          <description>Gets the cookie's domain</description>
          <long-description></long-description>
          <tag line="241" name="access" description="public"/>
          <tag line="241" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="259" package="Klein">
        <name>setDomain</name>
        <full_name>setDomain</full_name>
        <docblock line="252">
          <description>Sets the cookie's domain</description>
          <long-description></long-description>
          <tag line="252" name="param" description="" type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="252" name="access" description="public"/>
          <tag line="252" name="return" description="" type="\Klein\ResponseCookie">
            <type by_reference="false">\Klein\ResponseCookie</type>
          </tag>
        </docblock>
        <argument line="259">
          <name>$domain</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="276" package="Klein">
        <name>getSecure</name>
        <full_name>getSecure</full_name>
        <docblock line="270">
          <description>Gets the cookie's secure only flag</description>
          <long-description></long-description>
          <tag line="270" name="access" description="public"/>
          <tag line="270" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="288" package="Klein">
        <name>setSecure</name>
        <full_name>setSecure</full_name>
        <docblock line="281">
          <description>Sets the cookie's secure only flag</description>
          <long-description></long-description>
          <tag line="281" name="param" description="" type="boolean" variable="$secure">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="281" name="access" description="public"/>
          <tag line="281" name="return" description="" type="\Klein\ResponseCookie">
            <type by_reference="false">\Klein\ResponseCookie</type>
          </tag>
        </docblock>
        <argument line="288">
          <name>$secure</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="301" package="Klein">
        <name>getHttpOnly</name>
        <full_name>getHttpOnly</full_name>
        <docblock line="295">
          <description>Gets the cookie's HTTP only flag</description>
          <long-description></long-description>
          <tag line="295" name="access" description="public"/>
          <tag line="295" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="313" package="Klein">
        <name>setHttpOnly</name>
        <full_name>setHttpOnly</full_name>
        <docblock line="306">
          <description>Sets the cookie's HTTP only flag</description>
          <long-description></long-description>
          <tag line="306" name="param" description="" type="boolean" variable="$http_only">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="306" name="access" description="public"/>
          <tag line="306" name="return" description="" type="\Klein\ResponseCookie">
            <type by_reference="false">\Klein\ResponseCookie</type>
          </tag>
        </docblock>
        <argument line="313">
          <name>$http_only</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Route.php" hash="18b017e500a90c202dde7ff9b89f1cec" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein" line="23" package="Klein">
      <extends/>
      <name>Route</name>
      <full_name>\Klein\Route</full_name>
      <docblock line="16">
        <description>Route</description>
        <long-description>&lt;p&gt;Class to represent a route definition&lt;/p&gt;</long-description>
        <tag line="16" name="package" description="Klein"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="39" namespace="Klein" package="Default">
        <name>$callback</name>
        <default></default>
        <docblock line="30">
          <description>The callback method to execute when the route is matched</description>
          <long-description>&lt;p&gt;Any valid "callable" type is allowed&lt;/p&gt;</long-description>
          <tag line="30" name="link" description="http://php.net/manual/en/language.types.callable.php" link="http://php.net/manual/en/language.types.callable.php"/>
          <tag line="30" name="var" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="30" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="Klein" package="Default">
        <name>$path</name>
        <default></default>
        <docblock line="41">
          <description>The URL path to match</description>
          <long-description>&lt;p&gt;Allows for regular expression matching and/or basic string matching&lt;/p&gt;

&lt;p&gt;Examples:
- '/posts'
- '/posts/[:post_slug]'
- '/posts/[i:id]'&lt;/p&gt;</long-description>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="68" namespace="Klein" package="Default">
        <name>$method</name>
        <default></default>
        <docblock line="56">
          <description>The HTTP method to match</description>
          <long-description>&lt;p&gt;May either be represented as a string or an array containing multiple methods to match&lt;/p&gt;

&lt;p&gt;Examples:
- 'POST'
- array('GET', 'POST')&lt;/p&gt;</long-description>
          <tag line="56" name="var" description="" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="56" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="76" namespace="Klein" package="Default">
        <name>$count_match</name>
        <default></default>
        <docblock line="70">
          <description>Whether or not to count this route as a match when counting total matches</description>
          <long-description></long-description>
          <tag line="70" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="70" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="92" package="Klein">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="83">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="83" name="param" description="" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="83" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="param" description="" type="string|array" variable="$method">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="83" name="param" description="" type="boolean" variable="$count_match">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="83" name="access" description="public"/>
        </docblock>
        <argument line="92">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$path</name>
          <default>'*'</default>
          <type/>
        </argument>
        <argument line="92">
          <name>$method</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="92">
          <name>$count_match</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="107" package="Klein">
        <name>getCallback</name>
        <full_name>getCallback</full_name>
        <docblock line="101">
          <description>Get the callback</description>
          <long-description></long-description>
          <tag line="101" name="access" description="public"/>
          <tag line="101" name="return" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="120" package="Klein">
        <name>setCallback</name>
        <full_name>setCallback</full_name>
        <docblock line="112">
          <description>Set the callback</description>
          <long-description></long-description>
          <tag line="112" name="param" description="" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="112" name="throws" description="If the callback isn't a callable" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="112" name="access" description="public"/>
          <tag line="112" name="return" description="" type="\Klein\Route">
            <type by_reference="false">\Klein\Route</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="137" package="Klein">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="131">
          <description>Get the path</description>
          <long-description></long-description>
          <tag line="131" name="access" description="public"/>
          <tag line="131" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="149" package="Klein">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <docblock line="142">
          <description>Set the path</description>
          <long-description></long-description>
          <tag line="142" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="access" description="public"/>
          <tag line="142" name="return" description="" type="\Klein\Route">
            <type by_reference="false">\Klein\Route</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="162" package="Klein">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <docblock line="156">
          <description>Get the method</description>
          <long-description></long-description>
          <tag line="156" name="access" description="public"/>
          <tag line="156" name="return" description="" type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="175" package="Klein">
        <name>setMethod</name>
        <full_name>setMethod</full_name>
        <docblock line="167">
          <description>Set the method</description>
          <long-description></long-description>
          <tag line="167" name="param" description="" type="string|array" variable="$method">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="167" name="throws" description="If a non-string or non-array type is passed" type="\InvalidArgumentException">
            <type by_reference="false">\InvalidArgumentException</type>
          </tag>
          <tag line="167" name="access" description="public"/>
          <tag line="167" name="return" description="" type="\Klein\Route">
            <type by_reference="false">\Klein\Route</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="193" package="Klein">
        <name>getCountMatch</name>
        <full_name>getCountMatch</full_name>
        <docblock line="187">
          <description>Get the count_match</description>
          <long-description></long-description>
          <tag line="187" name="access" description="public"/>
          <tag line="187" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="205" package="Klein">
        <name>setCountMatch</name>
        <full_name>setCountMatch</full_name>
        <docblock line="198">
          <description>Set the count_match</description>
          <long-description></long-description>
          <tag line="198" name="param" description="" type="boolean" variable="$count_match">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="198" name="access" description="public"/>
          <tag line="198" name="return" description="" type="\Klein\Route">
            <type by_reference="false">\Klein\Route</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$count_match</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="222" package="Klein">
        <name>__invoke</name>
        <full_name>__invoke</full_name>
        <docblock line="213">
          <description>Magic "__invoke" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily call this instance like a function&lt;/p&gt;</long-description>
          <tag line="213" name="param" description="Generic arguments, magically accepted" type="mixed" variable="$args">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="213" name="access" description="public"/>
          <tag line="213" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$args</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="ServiceProvider.php" hash="7571b666ac0f2bde82732f072e6e61a0" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <include line="318" type="Require" package="Default">
      <name/>
    </include>
    <include line="342" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Klein" line="24" package="Klein">
      <extends/>
      <name>ServiceProvider</name>
      <full_name>\Klein\ServiceProvider</full_name>
      <docblock line="16">
        <description>ServiceProvider</description>
        <long-description>&lt;p&gt;Service provider class for handling logic extending between
a request's data and a response's behavior&lt;/p&gt;</long-description>
        <tag line="16" name="package" description="Klein"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="37" namespace="Klein" package="Default">
        <name>$request</name>
        <default></default>
        <docblock line="31">
          <description>The Request instance containing HTTP request data and behaviors</description>
          <long-description></long-description>
          <tag line="31" name="var" description="" type="\Klein\Request">
            <type by_reference="false">\Klein\Request</type>
          </tag>
          <tag line="31" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="Klein" package="Default">
        <name>$response</name>
        <default></default>
        <docblock line="39">
          <description>The Response instance containing HTTP response data and behaviors</description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="\Klein\Response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
          <tag line="39" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="53" namespace="Klein" package="Default">
        <name>$session_id</name>
        <default></default>
        <docblock line="47">
          <description>The id of the current PHP session</description>
          <long-description></long-description>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" namespace="Klein" package="Default">
        <name>$layout</name>
        <default></default>
        <docblock line="55">
          <description>The view layout</description>
          <long-description></long-description>
          <tag line="55" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="69" namespace="Klein" package="Default">
        <name>$view</name>
        <default></default>
        <docblock line="63">
          <description>The view to render</description>
          <long-description></long-description>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="77" namespace="Klein" package="Default">
        <name>$shared_data</name>
        <default></default>
        <docblock line="71">
          <description>Shared data collection</description>
          <long-description></long-description>
          <tag line="71" name="var" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
          <tag line="71" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="91" package="Klein">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="84">
          <description>Constructor</description>
          <long-description></long-description>
          <tag line="84" name="param" description="Object containing all HTTP request data and behaviors" type="\Klein\Request" variable="$request">
            <type by_reference="false">\Klein\Request</type>
          </tag>
          <tag line="84" name="param" description="Object containing all HTTP response data and behaviors" type="\Klein\Response" variable="$response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
          <tag line="84" name="access" description="public"/>
        </docblock>
        <argument line="91">
          <name>$request</name>
          <default>null</default>
          <type>\Klein\Request</type>
        </argument>
        <argument line="91">
          <name>$response</name>
          <default>null</default>
          <type>\Klein\Response</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="108" package="Klein">
        <name>bind</name>
        <full_name>bind</full_name>
        <docblock line="100">
          <description>Bind object instances to this service</description>
          <long-description></long-description>
          <tag line="100" name="param" description="Object containing all HTTP request data and behaviors" type="\Klein\Request" variable="$request">
            <type by_reference="false">\Klein\Request</type>
          </tag>
          <tag line="100" name="param" description="Object containing all HTTP response data and behaviors" type="\Klein\Response" variable="$response">
            <type by_reference="false">\Klein\Response</type>
          </tag>
          <tag line="100" name="access" description="public"/>
          <tag line="100" name="return" description="" type="\Klein\ServiceProvider">
            <type by_reference="false">\Klein\ServiceProvider</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$request</name>
          <default>null</default>
          <type>\Klein\Request</type>
        </argument>
        <argument line="108">
          <name>$response</name>
          <default>null</default>
          <type>\Klein\Response</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="123" package="Klein">
        <name>sharedData</name>
        <full_name>sharedData</full_name>
        <docblock line="117">
          <description>Returns the shared data collection object</description>
          <long-description></long-description>
          <tag line="117" name="access" description="public"/>
          <tag line="117" name="return" description="" type="\Klein\DataCollection\DataCollection">
            <type by_reference="false">\Klein\DataCollection\DataCollection</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="136" package="Klein">
        <name>startSession</name>
        <full_name>startSession</full_name>
        <docblock line="128">
          <description>Get the current session's ID</description>
          <long-description>&lt;p&gt;This will start a session if the current session id is null&lt;/p&gt;</long-description>
          <tag line="128" name="access" description="public"/>
          <tag line="128" name="return" description="" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="158" package="Klein">
        <name>flash</name>
        <full_name>flash</full_name>
        <docblock line="149">
          <description>Stores a flash message of $type</description>
          <long-description></long-description>
          <tag line="149" name="param" description="The message to flash" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="149" name="param" description="The flash message type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="149" name="param" description="Optional params to be parsed by markdown" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="149" name="access" description="public"/>
          <tag line="149" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$msg</name>
          <default></default>
          <type/>
        </argument>
        <argument line="158">
          <name>$type</name>
          <default>'info'</default>
          <type/>
        </argument>
        <argument line="158">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="180" package="Klein">
        <name>flashes</name>
        <full_name>flashes</full_name>
        <docblock line="173">
          <description>Returns and clears all flashes of optional $type</description>
          <long-description></long-description>
          <tag line="173" name="param" description="The name of the flash message type" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="access" description="public"/>
          <tag line="173" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$type</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Klein" line="213" package="Klein">
        <name>markdown</name>
        <full_name>markdown</full_name>
        <docblock line="199">
          <description>Render a text string as markdown</description>
          <long-description>&lt;p&gt;Supports basic markdown syntax&lt;/p&gt;

&lt;p&gt;Also, this method takes in EITHER an array of optional arguments (as the second parameter)
... OR this method will simply take a variable number of arguments (after the initial str arg)&lt;/p&gt;</long-description>
          <tag line="199" name="param" description="The text string to parse" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="199" name="param" description="Optional arguments to be parsed by markdown" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="199" name="static" description=""/>
          <tag line="199" name="access" description="public"/>
          <tag line="199" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="213">
          <name>$args</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Klein" line="250" package="Klein">
        <name>escape</name>
        <full_name>escape</full_name>
        <docblock line="242">
          <description>Escapes a string</description>
          <long-description></long-description>
          <tag line="242" name="param" description="The string to escape" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="242" name="static" description=""/>
          <tag line="242" name="access" description="public"/>
          <tag line="242" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="261" package="Klein">
        <name>refresh</name>
        <full_name>refresh</full_name>
        <docblock line="255">
          <description>Redirects the request to the current URL</description>
          <long-description></long-description>
          <tag line="255" name="access" description="public"/>
          <tag line="255" name="return" description="" type="\Klein\ServiceProvider">
            <type by_reference="false">\Klein\ServiceProvider</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="276" package="Klein">
        <name>back</name>
        <full_name>back</full_name>
        <docblock line="270">
          <description>Redirects the request back to the referrer</description>
          <long-description></long-description>
          <tag line="270" name="access" description="public"/>
          <tag line="270" name="return" description="" type="\Klein\ServiceProvider">
            <type by_reference="false">\Klein\ServiceProvider</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="299" package="Klein">
        <name>layout</name>
        <full_name>layout</full_name>
        <docblock line="289">
          <description>Get (or set) the view's layout</description>
          <long-description>&lt;p&gt;Simply calling this method without any arguments returns the current layout.
Calling with an argument, however, sets the layout to what was provided by the argument.&lt;/p&gt;</long-description>
          <tag line="289" name="param" description="The layout of the view" type="string" variable="$layout">
            <type by_reference="false">string</type>
          </tag>
          <tag line="289" name="access" description="public"/>
          <tag line="289" name="return" description="" type="string|\Klein\ServiceProvider">
            <type by_reference="false">string</type>
            <type by_reference="false">\Klein\ServiceProvider</type>
          </tag>
        </docblock>
        <argument line="299">
          <name>$layout</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="316" package="Klein">
        <name>yieldView</name>
        <full_name>yieldView</full_name>
        <docblock line="310">
          <description>Renders the current view</description>
          <long-description></long-description>
          <tag line="310" name="access" description="public"/>
          <tag line="310" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="329" package="Klein">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="321">
          <description>Renders a view + optional layout</description>
          <long-description></long-description>
          <tag line="321" name="param" description="The view to render" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="321" name="param" description="The data to render in the view" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="321" name="access" description="public"/>
          <tag line="321" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="329">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="361" package="Klein">
        <name>partial</name>
        <full_name>partial</full_name>
        <docblock line="353">
          <description>Renders a view without a layout</description>
          <long-description></long-description>
          <tag line="353" name="param" description="The view to render" type="string" variable="$view">
            <type by_reference="false">string</type>
          </tag>
          <tag line="353" name="param" description="The data to render in the view" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="353" name="access" description="public"/>
          <tag line="353" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="361">
          <name>$view</name>
          <default></default>
          <type/>
        </argument>
        <argument line="361">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="377" package="Klein">
        <name>addValidator</name>
        <full_name>addValidator</full_name>
        <docblock line="369">
          <description>Add a custom validator for our validation method</description>
          <long-description></long-description>
          <tag line="369" name="param" description="The name of the validator method" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="369" name="param" description="The callback to perform on validation" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="369" name="access" description="public"/>
          <tag line="369" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="377">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="377">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="390" package="Klein">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="382">
          <description>Start a validator chain for the specified string</description>
          <long-description></long-description>
          <tag line="382" name="param" description="The string to validate" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="382" name="param" description="The custom exception message to throw" type="string" variable="$err">
            <type by_reference="false">string</type>
          </tag>
          <tag line="382" name="access" description="public"/>
          <tag line="382" name="return" description="" type="\Klein\Validator">
            <type by_reference="false">\Klein\Validator</type>
          </tag>
        </docblock>
        <argument line="390">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
        <argument line="390">
          <name>$err</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="403" package="Klein">
        <name>validateParam</name>
        <full_name>validateParam</full_name>
        <docblock line="395">
          <description>Start a validator chain for the specified parameter</description>
          <long-description></long-description>
          <tag line="395" name="param" description="The name of the parameter to validate" type="string" variable="$param">
            <type by_reference="false">string</type>
          </tag>
          <tag line="395" name="param" description="The custom exception message to throw" type="string" variable="$err">
            <type by_reference="false">string</type>
          </tag>
          <tag line="395" name="access" description="public"/>
          <tag line="395" name="return" description="" type="\Klein\Validator">
            <type by_reference="false">\Klein\Validator</type>
          </tag>
        </docblock>
        <argument line="403">
          <name>$param</name>
          <default></default>
          <type/>
        </argument>
        <argument line="403">
          <name>$err</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="419" package="Klein">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="409">
          <description>Magic "__isset" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily check the existence of shared data
from this instance while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="409" name="param" description="The name of the shared data" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="409" name="access" description="public"/>
          <tag line="409" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="419">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="434" package="Klein">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="424">
          <description>Magic "__get" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily request shared data from this instance
while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="424" name="param" description="The name of the shared data" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="424" name="access" description="public"/>
          <tag line="424" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="434">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="450" package="Klein">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="439">
          <description>Magic "__set" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily set shared data from this instance
while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="439" name="param" description="The name of the shared data" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="439" name="param" description="The value of the shared data" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="439" name="access" description="public"/>
          <tag line="439" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="450">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="450">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="465" package="Klein">
        <name>__unset</name>
        <full_name>__unset</full_name>
        <docblock line="455">
          <description>Magic "__unset" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily remove shared data from this instance
while treating it as an instance property&lt;/p&gt;</long-description>
          <tag line="455" name="param" description="The name of the shared data" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="455" name="access" description="public"/>
          <tag line="455" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="465">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Validator.php" hash="e481029bd0873f06f23ce266de6e561e" package="Default">
    <docblock line="2">
      <description>Klein (klein.php) - A lightning fast router for PHP</description>
      <long-description></long-description>
      <tag line="2" name="author" description="Chris O'Hara &lt;cohara87@gmail.com&gt;"/>
      <tag line="2" name="author" description="Trevor Suarez (Rican7) (contributor and v2 refactorer)"/>
      <tag line="2" name="copyright" description="(c) Chris O'Hara"/>
      <tag line="2" name="link" description="https://github.com/chriso/klein.php" link="https://github.com/chriso/klein.php"/>
      <tag line="2" name="license" description="MIT"/>
    </docblock>
    <class final="false" abstract="false" namespace="Klein" line="23" package="Klein">
      <extends/>
      <name>Validator</name>
      <full_name>\Klein\Validator</full_name>
      <docblock line="18">
        <description>Validator</description>
        <long-description></long-description>
        <tag line="18" name="package" description="Klein"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="37" namespace="Klein" package="Default">
        <name>$methods</name>
        <default>array()</default>
        <docblock line="30">
          <description>The available validator methods</description>
          <long-description></long-description>
          <tag line="30" name="static" description=""/>
          <tag line="30" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="30" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="Klein" package="Default">
        <name>$str</name>
        <default></default>
        <docblock line="39">
          <description>The string to validate</description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="53" namespace="Klein" package="Default">
        <name>$err</name>
        <default></default>
        <docblock line="47">
          <description>The custom exception message to throw on validation failure</description>
          <long-description></long-description>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="access" description="protected"/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="62" namespace="Klein" package="Default">
        <name>$defaultAdded</name>
        <default>false</default>
        <docblock line="55">
          <description>Flag for whether the default validation methods have been added or not</description>
          <long-description></long-description>
          <tag line="55" name="static" description=""/>
          <tag line="55" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="55" name="access" description="protected"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="76" package="Klein">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="69">
          <description>Sets up the validator chain with the string and optional error message</description>
          <long-description></long-description>
          <tag line="69" name="param" description="The string to validate" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="The optional custom exception message to throw on validation failure" type="string" variable="$err">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="access" description="public"/>
        </docblock>
        <argument line="76">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$err</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Klein" line="93" package="Klein">
        <name>addDefault</name>
        <full_name>addDefault</full_name>
        <docblock line="86">
          <description>Adds default validators on first use</description>
          <long-description></long-description>
          <tag line="86" name="static" description=""/>
          <tag line="86" name="access" description="public"/>
          <tag line="86" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Klein" line="148" package="Klein">
        <name>addValidator</name>
        <full_name>addValidator</full_name>
        <docblock line="139">
          <description>Add a custom validator to our list of validation methods</description>
          <long-description></long-description>
          <tag line="139" name="param" description="The name of the validator method" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="param" description="The callback to perform on validation" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="139" name="static" description=""/>
          <tag line="139" name="access" description="public"/>
          <tag line="139" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="148">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Klein" line="166" package="Klein">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="153">
          <description>Magic "__call" method</description>
          <long-description>&lt;p&gt;Allows the ability to arbitrarily call a validator with an optional prefix
of "is" or "not" by simply calling an instance property like a callback&lt;/p&gt;</long-description>
          <tag line="153" name="param" description="The callable method to execute" type="callable" variable="$method">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="153" name="param" description="The argument array to pass to our callback" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="153" name="throws" description="If an attempt was made to call a validator modifier that doesn't exist" type="\BadMethodCallException">
            <type by_reference="false">\BadMethodCallException</type>
          </tag>
          <tag line="153" name="throws" description="If the validation check returns false" type="\Klein\Exceptions\ValidationException">
            <type by_reference="false">\Klein\Exceptions\ValidationException</type>
          </tag>
          <tag line="153" name="access" description="public"/>
          <tag line="153" name="return" description="" type="\Klein\Validator">
            <type by_reference="false">\Klein\Validator</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="166">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Klein" full_name="Klein">
    <package name="DataCollection" full_name="Klein\DataCollection"/>
    <package name="Exceptions" full_name="Klein\Exceptions"/>
  </package>
  <namespace name="Klein" full_name="Klein">
    <namespace name="DataCollection" full_name="Klein\DataCollection"/>
    <namespace name="Exceptions" full_name="Klein\Exceptions"/>
  </namespace>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
